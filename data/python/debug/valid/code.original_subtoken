def get flashed messages with categories False category filter [] flashes request ctx stack top flashesif flashes is None request ctx stack top flashes flashes session pop ' flashes' if ' flashes' in session else [] if category filter flashes list filter lambda f f[ 0 ] in category filter flashes if not with categories return [x[ 1 ] for x in flashes]return flashes
def install translator qapp global QT TRANSLATO Rif QT TRANSLATOR is None qt translator Q Translator if qt translator load 'qt ' + Q Locale system name Q Library Info location Q Library Info Translations Path QT TRANSLATOR qt translatorif QT TRANSLATOR is not None qapp install Translator QT TRANSLATOR
def delete dhcp options dhcp options id None dhcp options name None region None key None keyid None profile None return delete resource resource 'dhcp options' name dhcp options name resource id dhcp options id region region key key keyid keyid profile profile
def import module name required True try import name globals locals [] except Import Error if not required and module not found return Noneraisereturn sys modules[name]
def test depth first mro class A object passclass B A passclass C A passclass D B C passclass E D object passclass G object passclass H G passclass I G passclass K H I object passclass L K E pass Are Equal L mro L K H I G E D B C A object
def mapping data source geom name 'geom' layer key 0 multi geom False if isinstance data source str data source Data Source data source elif isinstance data source Data Source passelse raise Type Error ' Datasourceparametermustbeastringora Data Sourceobject ' mapping {}for field in data source[layer key] fields mfield field lower if mfield[ -1 ] ' ' mfield + 'field' mapping[mfield] fieldgtype data source[layer key] geom typeif multi geom gtype to multi mapping[geom name] str gtype upper return mapping
def patfilter names pat if pat not in pat cache pat cache[pat] re compile translate pattern pat match pat cache[pat] matchreturn filter match names
def test pprint npfloat 32 dat np array [1 0 2 0] dtype np float 32 t Table [dat] names ['a'] t['a'] format '5 2f'assert str t['a'] 'a\n-----\n 1 00 \n 2 00 '
def test interpolation Chart chart Chart interpolate 'cubic' chart add '1 ' [1 3 12 3 4] chart add '2 ' [7 -4 10 None 8 3 1] q chart render pyquery assert len q ' legend' 2
def save and remove module name orig modules if name not in sys modules import name del sys modules[name]for modname in list sys modules if modname name or modname startswith name + ' ' orig modules[modname] sys modules[modname]del sys modules[modname]
def get minions conn get conn ret None cur conn cursor sql 'SELECTDISTINC Tid FRO Msalt returns'cur execute sql data cur fetchall ret []for minion in data ret append minion[ 0 ] close conn conn return ret
def run migrations offline engine manager Engine Manager config get required 'DATABASE HOSTS' config get required 'DATABASE USERS' include disabled True engine engine manager engines[shard id]context configure engine engine url engine url with context begin transaction context run migrations
def url 2 ip url iport urlsplit url [1 ] split ' ' if len iport > 1 return gethostbyname iport[ 0 ] iport[ 1 ] return gethostbyname iport[ 0 ]
def wait until running instance with start action action type u'flocker provision aws wait until running' instance id instance id as context poll while lambda node is booting instance repeat 1 INSTANCE TIMEOUT context add success fields instance state instance state context add success fields instance state reason instance state reason if instance state u'running' raise Failed To Run instance state reason
def dict to numpy array d mapping None try return dict to numpy array 2 d mapping except Attribute Error Type Error return dict to numpy array 1 d mapping
def is suggestion handled thread id exploration id thread feedback models Feedback Thread Model get by exp and thread id exploration id thread id return thread status in [feedback models STATUS CHOICES FIXED feedback models STATUS CHOICES IGNORED]
def get default tempdir namer Random Name Sequence dirlist candidate tempdir list for dir in dirlist if dir os curdir dir os path abspath dir for seq in range 100 name next namer filename os path join dir name try fd os open filename bin openflags 384 try try with io open fd 'wb' closefd False as fp fp write 'blat' finally os close fd finally os unlink filename return direxcept File Exists Error passexcept Permission Error if os name 'nt' and os path isdir dir and os access dir os W OK continuebreakexcept OS Error breakraise File Not Found Error errno ENOENT ' Nousabletemporarydirectoryfoundin%s' % dirlist
def get default site app name 'filebrowser' resolver get resolver get urlconf name 'filebrowser'app list resolver app dict[app name]if name not in app list name app list[ 0 ]return get site dict [name]
def ccovf x y unbiased True demean True n len x if demean xo x - x mean yo y - y mean else xo xyo yif unbiased xi np ones n d np correlate xi xi 'full' else d nreturn np correlate xo yo 'full' / d [ n - 1 ]
def load plugins config paths config['pluginpath'] get confit Str Seq split False paths map util normpath paths import beetsplugbeetsplug path paths + beetsplug path sys path + pathsplugins load plugins config['plugins'] as str seq plugins send 'pluginload' return plugins
def serializers opts return Lazy Loader module dirs opts 'serializers' opts tag 'serializers'
def rgb 2 short r g b dist lambda s d s[ 0 ] - d[ 0 ] ** 2 + s[ 1 ] - d[ 1 ] ** 2 + s[ 2 ] - d[ 2 ] ** 2 ary [hex to rgb hex for hex in RGB 2 SHORT DICT]m min ary key partial dist r g b return RGB 2 SHORT DICT[rgb to hex m ]
@deprecated Version ' Twisted' 15 3 0 replacement 'twisted web template' def output func *args **kw try return func *args **kw except log msg ' Errorcalling%r ' % func log err return PRE ' Anerroroccurred '
@register filter is safe True def pprint value try return pformat value except Exception as e return u' Errorinformatting %s' % force text e errors u'replace'
def gf factor sqf f p K method None lc f gf monic f p K if gf degree f < 1 return lc [] method method or query 'GF FACTOR METHOD' if method is not None factors factor methods[method] f p K else factors gf zassenhaus f p K return lc factors
def all iterable for element in iterable if not element return Falsereturn True
def draw nx G pos **kwds draw G pos **kwds
def start clientbrowser config args logger info ' Startclientmode browser ' global clientfrom glances client browser import Glances Client Browserclient Glances Client Browser config config args args client serve forever client end
@raises Value Error def test bootstrap arglength algo bootstrap np arange 5 np arange 10
def runwsgi func if os environ has key 'SERVER SOFTWARE' os environ['FCGI FORCE CGI'] 'Y'if os environ has key 'PHP FCGI CHILDREN' or os environ has key 'SERVER SOFTWARE' return runfcgi func if 'scgi' in sys argv return runscgi func return runsimple func listget sys argv 1 8080
def random bucket name prefix 'awscli-s 3 integ-' num random 10 return prefix + random chars num random
def proxy process proxyname test changes old []changes new []if not is proxy running proxyname if not test salt ['cmd run all'] 'salt-proxy--proxyid {0 }-linfo-d' format salt ext six moves shlex quote proxyname timeout 5 changes new append ' Salt Proxy Startedproxyprocessfor{ 0 }' format proxyname else changes new append ' Salt Proxy process{ 0 }willbestarted' format proxyname else changes old append ' Salt Proxy alreadyrunningfor{ 0 }' format proxyname return True changes new changes old
def offset or limit clause element name None type None if element is None return Noneelif hasattr element ' clause element ' return element clause element elif isinstance element Visitable return elementelse value util asint element return Offset Limit Param name value type type unique True
def get cron info owner 'root'if grains ['os'] ' Free BSD' group 'wheel'crontab dir '/var/spool/incron'elif grains ['os'] ' Open BSD' group 'crontab'crontab dir '/var/spool/incron'elif grains get 'os family' ' Solaris' group 'root'crontab dir '/var/spool/incron'else group 'root'crontab dir '/var/spool/incron'return owner group crontab dir
def retrieve device config return salt ['snmp config']
def normalize formset dict formset attr list assert isinstance formset Base Simple Form Set res []for form in formset forms res append normalize form dict form attr list return res
def parse strtime timestr fmt PERFECT TIME FORMAT return datetime datetime strptime timestr fmt
def hash filehash filename md 4 hashlib new u'md 4 ' copydef gen f while True x f read 9728000 if x yield x else returndef md 4 hash data m md 4 m update data return mwith open filename u'rb' as f a gen f hashes [md 4 hash data digest for data in a]if len hashes 1 return to hex hashes[ 0 ] else return md 4 hash reduce lambda a d a + d hashes u'' hexd
def flatten struct if struct is None return []flat []if isinstance struct dict for result in six iteritems struct flat + flatten result return flatif isinstance struct six string types return [struct]try iterator iter struct except Type Error return [struct]for result in iterator flat + flatten result return flat
@receiver user logged in def log successful login sender request user **kwargs if settings FEATURES['SQUELCH PII IN LOGS'] AUDIT LOG info u' Loginsuccess-user id {0 }' format user id else AUDIT LOG info u' Loginsuccess-{ 0 } {1 } ' format user username user email
def create connection dest pair proxy type None proxy addr None proxy port None proxy username None proxy password None timeout None sock socksocket if isinstance timeout int float sock settimeout timeout sock set proxy proxy type proxy addr proxy port proxy username proxy password sock connect dest pair return sock
@taskdef setup ctx copy settings ctx addons True packages ctx requirements ctx addons True dev True build js config files ctx assets ctx dev True watch False
def get name name or obj if isinstance name or obj six string types return name or objtry return name or obj nameexcept Attribute Error raise exc Missing Name name or obj
def zoom effect 02 ax 1 ax 2 **kwargs tt ax 1 trans Scale + ax 1 trans Limits + ax 2 trans Axes trans blended transform factory ax 2 trans Data tt mybbox 1 ax 1 bboxmybbox 2 Transformed Bbox ax 1 view Lim trans prop patches kwargs copy prop patches['ec'] 'none'prop patches['alpha'] 0 2 c1 c2 bbox patch 1 bbox patch 2 p connect bbox mybbox 1 mybbox 2 loc 1 a 3 loc 2 a 2 loc 1 b 4 loc 2 b 1 prop lines kwargs prop patches prop patches ax 1 add patch bbox patch 1 ax 2 add patch bbox patch 2 ax 2 add patch c1 ax 2 add patch c2 ax 2 add patch p return c1 c2 bbox patch 1 bbox patch 2 p
def expand table table return np repeat [[ 1 1] [1 0] [0 1] [0 0]] table ravel axis 0
def load extra data backend details response uid user social user None *args **kwargs social user social user or User Social Auth get social auth backend name uid user if social user extra data backend extra data user uid response details if kwargs get 'original email' and 'email' not in extra data extra data['email'] kwargs get 'original email' if extra data and social user extra data extra data if social user extra data social user extra data update extra data else social user extra data extra datasocial user save return {'social user' social user}
def arbitrary module name func name args kwargs {} if module name startswith 'calibre plugins' from calibre customize ui import find pluginfind pluginmodule importlib import module module name func getattr module func name return func *args **kwargs
def cla Model Control Disable TP Learning Cb cla Model assert isinstance cla Model CLA Model cla Model get TP Region set Parameter 'learning Mode' False return
def create api deployment rest Api Id stage Name stage Description '' description '' cache Cluster Enabled False cache Cluster Size '0 5' variables None region None key None keyid None profile None try variables dict if variables is None else variables conn get conn region region key key keyid keyid profile profile deployment conn create deployment rest Api Id rest Api Id stage Name stage Name stage Description stage Description description description cache Cluster Enabled cache Cluster Enabled cache Cluster Size cache Cluster Size variables variables return {'created' True 'deployment' convert datetime str deployment }except Client Error as e return {'created' False 'error' salt utils boto 3 get error e }
def point along a line x0 y0 x1 y1 d dx dy x0 - x1 y0 - y1 ff d / dx * dx + dy * dy ** 0 5 x2 y2 x0 - ff * dx y0 - ff * dy return x2 y2
def s3 roles permitted name 'roles permitted' **attr T current Trepresent S3 Represent lookup 'auth group' fields ['role'] if 'label' not in attr attr['label'] T ' Roles Permitted' if 'sortby' not in attr attr['sortby'] 'role'if 'represent' not in attr attr['represent'] representif 'requires' not in attr attr['requires'] IS EMPTY OR IS ONE OF current db 'auth group id' represent multiple True if 'comment' not in attr attr['comment'] DIV class 'tooltip' title '%s %s' % T ' Roles Permitted' T ' Ifthisrecordshouldberestrictedthenselectwhichrole s arepermittedtoaccesstherecordhere ' if 'ondelete' not in attr attr['ondelete'] 'RESTRICT'f S3 Reusable Field name 'list referenceauth group' **attr return f
def cert from key info key info ignore age False res []for x509 data in key info x509 data x509 certificate x509 data x509 certificatecert x509 certificate text strip cert '\n' join split len '' join [s strip for s in cert split ] 64 if ignore age or active cert cert res append cert else logger info ' Inactivecert' return res
def instance group update context group uuid values return IMPL instance group update context group uuid values
def tree to bitstrs tree clades bitstrs {}term names [term name for term in tree find clades terminal True ]for clade in tree find clades terminal False bitstr clade to bitstr clade term names clades bitstrs[clade] bitstrreturn clades bitstrs
def timeuntil value arg None from django utils timesince import timesincefrom datetime import datetimeif not value return ''if arg return timesince arg value return timesince datetime now value
def main module Ansible Module argument spec {'table' {'required' True} 'record' {'required' True} 'col' {'required' True} 'key' {'required' True} 'value' {'required' True} 'timeout' {'default' 5 'type' 'int'}} supports check mode True params set module
def test hashbang entry tokenize '# thisisacomment\n' assert entry []
def add Begin XML Tag attributes depth local Name output text '' depth Start ' DCTB ' * depth output write '%s<%s%s>%s\n' % depth Start local Name get Attributes String attributes text
def virtual if opts ['master tops'] get 'ext nodes' return Truereturn False
def exists name with settings hide 'running' 'stdout' 'warnings' warn only True return run 'getentpasswd% name s' % locals succeeded
def disassociate api key stagekeys api Key stagekeyslist region None key None keyid None profile None try conn get conn region region key key keyid keyid profile profile pvlist [ '/stages' stagekey for stagekey in stagekeyslist]response api key patch remove conn api Key pvlist return {'disassociated' True}except Client Error as e return {'disassociated' False 'error' salt utils boto 3 get error e }
@then u'weseedatabasedropped' def step see db dropped context expect exact context u'DROPDATABASE' timeout 2
@bdd when bdd parsers parse ' Iwaitforthejavascriptmessage"{message}"' def javascript message when quteproc message quteproc wait for js message
def git Present try gitvers subprocess check output 'git--version' split stderr subprocess PIPE except Called Process Error OS Error gitvers ''return bool gitvers startswith 'gitversion'
def create mount target filesystemid subnetid ipaddress None securitygroups None keyid None key None profile None region None **kwargs client get conn key key keyid keyid profile profile region region return client create mount point File System Id filesystemid Subnet Id subnetid Ip Address ipaddress Security Groups securitygroups
def Is Auto Generated xml str try xml root Element Tree fromstring xml str return xml root tag 'datastore-indexes' and Boolean Attribute xml root attrib get 'auto Generate' 'false' except Element Tree Parse Error return False
def jnp zeros n nt return jnyn zeros n nt [1 ]
def get Tooth Profile Rack derivation addendum Side derivation quarter Wavelength - derivation addendum * derivation tan Pressure addendum Complex complex addendum Side derivation addendum dedendum Side derivation quarter Wavelength + derivation dedendum * derivation tan Pressure dedendum Complex complex dedendum Side - derivation dedendum tooth Profile [dedendum Complex]if derivation root Bevel > 0 0 mirror Point complex derivation wavelength - dedendum Side - derivation dedendum tooth Profile get Bevel Path addendum Complex derivation root Bevel dedendum Complex mirror Point if derivation tip Bevel > 0 0 mirror Point complex - addendum Complex real addendum Complex imag bevel Path get Bevel Path dedendum Complex derivation tip Bevel addendum Complex mirror Point bevel Path reverse tooth Profile + bevel Pathelse tooth Profile append addendum Complex return euclidean get Mirror Path get Thickness Multiplied Path tooth Profile derivation tooth Thickness Multiplier
def set time time time format get date time format time dt obj datetime strptime time time format cmd 'systemsetup-settime{ 0 }' format dt obj strftime '%H %M %S' return salt utils mac utils execute return success cmd
def del job files job paths for path in job paths if path and clip path path lower startswith cfg download dir get path lower remove all path recursive True
def get discount modules return load module instances 'SHUUP DISCOUNT MODULES' 'discount module'
def showwarning message category filename lineno file None if file is None file sys stderrtry file write formatwarning message category filename lineno except IO Error pass
def test sample wrong X sm SMOTEENN random state RND SEED sm fit X Y assert raises Runtime Error sm sample np random random 100 40 np array [0 ] * 50 + [1 ] * 50
def initialize log data ids bcs added field log data {}for curr key in ids bcs added field keys base key ''if curr key[ 0 ] base key + curr key[ 0 ] + ' ' if curr key[ 1 ] base key + curr key[ 1 ] + ' ' base key + ids bcs added field[curr key]log data[base key] 0return log data
def read handle format format format lower motifs parse handle format if len motifs 0 raise Value Error ' Nomotifsfoundinhandle' if len motifs > 1 raise Value Error ' Morethanonemotiffoundinhandle' motif motifs[ 0 ]return motif
@control command args [ u'task name' text t u'rate limit' text t ] signature u'<task name><rate limit e g 5/s 5/m 5/h >' def rate limit state task name rate limit **kwargs try rate rate limit except Value Error as exc return nok u' Invalidratelimitstring {0 r}' format exc try state app tasks[task name] rate limit rate limitexcept Key Error logger error u' Ratelimitattemptforunknowntask%s' task name exc info True return nok u'unknowntask' state consumer reset rate limits if not rate limit logger info u' Ratelimitsdisabledfortasksoftype%s' task name return ok u'ratelimitdisabledsuccessfully' logger info u' Newratelimitfortasksoftype%s %s ' task name rate limit return ok u'newratelimitsetsuccessfully'
def is sequence of strings obj if not iterable obj return Falseif is string like obj return Falsefor o in obj if not is string like o return Falsereturn True
def highlighting view name style left right tag settings sublime load settings 'bh tag sublime-settings' match style tag settings get 'tag style' {} get last mode None if match style is not None and style match style tag name tag settings get 'tag name' {} get last mode '[\\w\\ \\ \\-]+' if left is not None region view find tag name left begin left left move region begin region end if right is not None region view find tag name right begin right right move region begin region end return left right
def in Filesystem Namespace path return path[ 1] '\x 00 '
def set policy table 'filter' chain None policy None family 'ipv 4 ' if not chain return ' Error Chainneedstobespecified'if not policy return ' Error Policyneedstobespecified'wait '--wait' if has option '--wait' family else '' cmd '{ 0 }{ 1 }-t{ 2 }-P{ 3 }{ 4 }' format iptables cmd family wait table chain policy out salt ['cmd run'] cmd return out
def test formatters Chart if Chart dual or Chart Box returnchart Chart formatter lambda x chart serie '%s%s$' % x serie title chart add ' a' [1 2 {'value' 3 'formatter' lambda x u '%s\xc 2 \xa 5 ' % x }] chart add ' b' [4 5 6] formatter lambda x u '%s\xe 2 \x 82 \xac' % x chart x labels [2 4 6]chart x labels major [4 ]q chart render pyquery assert set [v text for v in q ' value' ] set u '4 \xe 2 \x 82 \xac' u '5 \xe 2 \x 82 \xac' u '6 \xe 2 \x 82 \xac' '1 a$' '2 a$' u '3 \xc 2 \xa 5 ' + '6 a$' u '15 \xe 2 \x 82 \xac' if Chart in Pie Solid Gauge else
def test sort model create model [[ 'B' '' '' 1 'C' '' '' 2 'A' '' '' 0 ]] filter model sortfilter Completion Filter Model model filter model sort 0 Qt Ascending Order actual extract model data filter model assert actual [[ 'A' '' '' 'B' '' '' 'C' '' '' ]] filter model sort 0 Qt Descending Order actual extract model data filter model assert actual [[ 'C' '' '' 'B' '' '' 'A' '' '' ]]
def create dendrogram X orientation 'bottom' labels None colorscale None distfun None linkagefun lambda x sch linkage x 'complete' if not scp or not scs or not sch raise Import Error ' Figure Factory create dendrogramrequiresscipy scipy spatialandscipy hierarchy' s X shapeif len s 2 exceptions Plotly Error ' Xshouldbe 2 -dimensionalarray ' if distfun is None distfun scs distance pdistdendrogram Dendrogram X orientation labels colorscale distfun distfun linkagefun linkagefun return {'layout' dendrogram layout 'data' dendrogram data}
def uni print statement out file None if out file is None out file sys stdouttry out file write statement except Unicode Encode Error new encoding getattr out file 'encoding' 'ascii' if new encoding is None new encoding 'ascii'new statement statement encode new encoding 'replace' decode new encoding out file write new statement out file flush
def pretty name name name name[ 0 ] upper + name[ 1 ] return name replace ' ' ''
def list snapshots domain None ret dict for vm domain in get domain iterable True * domain and [domain] or list ret[vm domain name ] [ parse snapshot description snap for snap in vm domain list All Snapshots ] or 'N/A' return ret
def branch list remote False if remote return for each ref basename u'refs/remotes' else return for each ref basename u'refs/heads'
@depends HAS PYVMOMI def get ntp config host username password protocol None port None host names None service instance salt utils vmware get service instance host host username username password password protocol protocol port port host names check hosts service instance host host names ret {}for host name in host names host ref get host ref service instance host host name host name ntp config host ref config Manager date Time System date Time Info ntp Config serverret update {host name ntp config} return ret
def get environ proxies url if should bypass proxies url return {}else return getproxies
def floating ip list call None if call 'function' raise Salt Cloud System Exit ' Thefloating ip listactionmustbecalledwith-for--function' conn get conn return conn floating ip list
def tsql query query **kwargs try cur get connection **kwargs cursor cur execute query return loads Mssql Encoder encode {'resultset' cur fetchall } ['resultset']except Exception as e return ' Couldnotrunthequery' str e
def connect to region region name **kw params for region in regions if region name region name return region connect **kw params return None
def per cpu times ret []for user system idle interrupt dpc in cext per cpu times item scputimes user system idle interrupt dpc ret append item return ret
def run aws cmd region opts user **kwargs receipthandle kwargs pop 'receipthandle' None if receipthandle kwargs['receipt-handle'] receipthandlenum kwargs pop 'num' None if num kwargs['max-number-of-messages'] num formatted args ['--{ 0 }"{ 1 }"' format k v for k v in six iteritems kwargs ]cmd 'awssqs{cmd}{args}{region}{out}' format cmd cmd args '' join formatted args region region region out OUTPUT rtn salt ['cmd run'] cmd runas user python shell False return json loads rtn if rtn else ''
def Trimmed Mean t p 0 01 t Trim t p return Mean t
def e Put Handle IO Type Channel Value x1 if os name 'nt' static Lib ctypes windll Load Library 'labjackud' pv ctypes c double Value ec static Lib e Put Handle IO Type Channel pv x1 if ec 0 raise Lab Jack Exception ec else raise Lab Jack Exception 0 ' Functiononlysupportedfor Windows'
def organize states for delete base mapper states uowtransaction states to delete []for state dict mapper connection in connections for states base mapper uowtransaction states mapper dispatch before delete mapper connection state states to delete append state dict mapper bool state key connection return states to delete
def local binary pattern image P R method 'default' assert nD image 2 methods {'default' ord 'D' 'ror' ord 'R' 'uniform' ord 'U' 'nri uniform' ord 'N' 'var' ord 'V' }image np ascontiguousarray image dtype np double output local binary pattern image P R methods[method lower ] return output
def handle Newest qry try get User Name except return skype Error qry qry decode 'utf 8 ' try if ' ' in qry and qry partition ' ' [0 ] in map lambda s s[ 0 ] read Friends return send Message Wait qry else return find Newest except Environment Error return Py Fred 'ch xtin skypingalfred error' False add Item 'skypeupdate' 'skypeupdate' ' No Skype Friends Found' ' Useskypeupdatetocachefriends ' True 'update' to XML except return Py Fred Generic Error
@validate 'tree' def valid field in tree arch return all child tag in 'field' 'button' for child in arch xpath '/tree/*'
def cr uid ids method method api 'cr uid ids'return method
def issue section issue labels issue get 'labels' [] for label in labels if not label['name'] startswith 'type ' continueif label['name'] in LOG SECTION return LOG SECTION[label['name']]elif label['name'] in IGNORE ISSUE TYPE return Noneelse logging warn 'unknownissuetype "{}"for {}' format label['name'] issue line issue return None
def get Points From Segment Table segment Table points []segment Table Keys segment Table keys segment Table Keys sort for segment Table Key in segment Table Keys for segment in segment Table[segment Table Key] for endpoint in segment points append endpoint point return points
@transaction non atomic requests@ensure csrf cookie@cache control no cache True no store True must revalidate True @require global staff@require http methods ['POST' 'DELETE'] def certificate invalidation view request course id course key Course Key from string course id try certificate invalidation data parse request data request certificate validate request data and get certificate certificate invalidation data course key except Value Error as error return Json Response {'message' error message} status 400 if request method 'POST' try certificate invalidation invalidate certificate request certificate certificate invalidation data except Value Error as error return Json Response {'message' error message} status 400 return Json Response certificate invalidation elif request method 'DELETE' try re validate certificate request course key certificate except Value Error as error return Json Response {'message' error message} status 400 return Json Response {} status 204
def rollback using None get connection using rollback
def mathdefault s if rc Params[u' internal classic mode'] return u'\\mathdefault{%s}' % s else return u'{%s}' % s
@requires sklearndef test gat plot nonsquared gat get data test times dict start 0 0 gat plot ax gat plot diagonal scores ax get children [1 ] get lines [2 ] get ydata assert equals len scores len gat estimators
def add keys to request request field pb key pbs for key pb in key pbs request field pb add Copy From key pb
def execute on completion application config callback def inner environ start response try result application environ start response except callback environ raisereturn generate close and callback result callback environ return inner
def qt 5 qml data directory qmldir qt 5 qml dir return os path join qmldir directory 'qml'
def require finance admin func def wrapped request course id try course key Course Key from string course id except Invalid Key Error log error u' Unabletofindcoursewithcoursekey%s' course id return Http Response Not Found access auth user has role request user Course Finance Admin Role course key if access return func request course id else return Http Response Forbidden return wrapped
def add Begin XML Tag attribute Dictionary class Name depth output text '' depth Start ' DCTB ' * depth output write '%s<%s%s>%s\n' % depth Start class Name get Attribute Dictionary String attribute Dictionary text
def debug brule file None if not file from sys import stdoutfile stdoutdef write brl expr result file write ' Rule %s\n' % get function name brl file write ' In %s\n Out %s\n\n' % expr result return onaction brule write
def test cons list entry tokenize ' a [] ' [0 ]assert entry Hy List [ Hy Symbol 'a' ] assert type entry Hy List entry tokenize ' a ' [0 ]assert entry Hy Expression [ Hy Symbol 'a' ] assert type entry Hy Expression entry tokenize ' ab {} ' [0 ]assert entry Hy Dict [ Hy Symbol 'a' Hy Symbol 'b' ] assert type entry Hy Dict
def wait for step emr connection step jobflowid sleeptime sleep 180 start time step state get step state emr connection jobflowid step name update True while step state in LIVE STATES + [PENDING] sleep sleeptime step state get step state emr connection jobflowid step name end time print '%stook% 0 2fs exit %s ' % step name end - start step state return step state
def negotiate locale preferred available sep ' ' aliases LOCALE ALIASES available [a lower for a in available if a]for locale in preferred ll locale lower if ll in available return localeif aliases alias aliases get ll if alias alias alias replace ' ' sep if alias lower in available return aliasparts locale split sep if len parts > 1 and parts[ 0 ] lower in available return parts[ 0 ]return None
def get occupied streams realm subs filter Subscription objects filter active True user profile realm realm user profile is active True values 'recipient id' stream ids Recipient objects filter type Recipient STREAM id in subs filter values 'type id' return Stream objects filter id in stream ids realm realm deactivated False
def test find number 6 s 'query 1 e 5 notfound'r find number s assert s[r[ 0 ] r[ 1 ]] '1 e 5 '
def build match rule action target match rule policy Rule Check 'rule' action resource is write get resource and action action if is write res map attributes RESOURCE ATTRIBUTE MA Pif resource in res map for attribute name in res map[resource] if is attribute explicitly set attribute name res map[resource] target attribute res map[resource][attribute name]if 'enforce policy' in attribute and is write attr rule policy Rule Check 'rule' '%s %s' % action attribute name match rule policy And Check [match rule attr rule] return match rule
def dmp ground LC f u K while u f dmp LC f K u - 1return dup LC f K
def get New Repository return Fill Repository
def total seconds td return td microseconds + td seconds + td days * 24 * 3600 * 10 ** 6 / 10 ** 6
def get entrance exam score request course exam key Usage Key from string course entrance exam id exam descriptor modulestore get item exam key def inner get module descriptor '\n Delegatetoget module for descriptor importedheretoavoidcircularreference \n'from courseware module render import get module for descriptorfield data cache Field Data Cache [descriptor] course id request user return get module for descriptor request user request descriptor field data cache course id course course exam module generators yield dynamic descriptor descendants exam descriptor request user id inner get module exam modules [module for module in exam module generators]return calculate entrance exam score request user course exam modules
def floating ip get by fixed ip id context fixed ip id return IMPL floating ip get by fixed ip id context fixed ip id
def load passphrase from file vf path os path expanduser kVF Passphrase File assert os access vf path os F OK and os access vf path os R OK '%smustexistandbereadable' % vf path with open vf path as f user data f read return user data strip '\n'
def describe identity pools Identity Pool Name Identity Pool Id None region None key None keyid None profile None conn get conn region region key key keyid keyid profile profile try ids find identity pool ids Identity Pool Name Identity Pool Id conn if ids results []for pool id in ids response conn describe identity pool Identity Pool Id pool id response pop ' Response Metadata' None results append response return {'identity pools' results}else return {'identity pools' None}except Client Error as e return {'error' salt utils boto 3 get error e }
@register simple tag takes context True def zinnia loop template context default template matching context object get context first matching object context ['category' 'tag' 'author' 'pattern' 'year' 'month' 'week' 'day'] context positions get context loop positions context templates loop template list context positions context object matching default template ENTRY LOOP TEMPLATES return select template templates
def load Experiment Description Script From Dir experiment Dir description Script Path os path join experiment Dir 'description py' module load Description File description Script Path return module
def token list to text tokenlist Zero Width Escape Token Zero Width Escapereturn u'' join item[ 1 ] for item in tokenlist if item[ 0 ] Zero Width Escape
@profiler tracedef transfer list request detailed True search opts None c client cinderclient request try return [ Volume Transfer v for v in c client transfers list detailed detailed search opts search opts ]except cinder exception Forbidden as error LOG error error return []
def setup platform hass config add devices discovery info None if discovery info is None returnadd devices Telldus Live Sensor hass sensor for sensor in discovery info
def test discretize callable 1d def f x return x ** 2 y discretize model f -5 6 assert allclose y np arange -5 6 ** 2
def format sql encoding None **options stack engine Filter Stack options formatter validate options options stack formatter build filter stack stack options stack postprocess append filters Serializer Unicode return '' join stack run sql encoding
def load default from io import Bytes I Oimport base 64 f Image Font f load pilfont data Bytes IO base 64 b64 decode '\n U El M Zm 9 ud Ao 7 Ozs 7 Ozsx M Ds KREFUQ Qo AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAA// 8 AAQAAAAAAAAABAAEA\n Bg AAAAH/+g ADAAAAAQAAAAMA Bg AGAAAA Af/ 6 AAT//QADAAAA Bg ADAAYAAAAA//k ABQABAAYAAAAL\n A Ag A Bg AAAAD/+AAFAAEA Cw AAABAACQAGAAAAAP/ 5 AAUAAAAQAAAAFQAHAAYAAP////o ABQAAABUA\n AA Ab AAYA Bg AAAAH/+QAE//w A Gw AAAB 4 A Aw AGAAAA Af/ 5 AAQAAQ Ae AAAAIQAIAAYAAAAB//k ABAAB\n ACEAAA Ak A Ag A Bg AAAAD/+QAE// 0 AJAAAA Cg ABAAGAAAAAP/ 6 AAX//w Ao AAAALQAFAAYAAAAB// 8 A\n BAACAC 0 AAA Aw AAMA Bg AAAAD//AAF// 0 AMAAAADUAAQAGAAAA Af//AAMAAAA 1 AAAA Nw ABAAYAAAAB\n//k ABQABA Dc AAAA 7 A Ag A Bg AAAAD/+QAFAAAA Ow AAAEAA Bw AGAAAAAP/ 5 AAYAAABAAAAA Rg AHAAYA\n AAAA//k ABQAAAEYAAABLA Ac A Bg AAAAD/+QAFAAAA Sw AAAFAA Bw AGAAAAAP/ 5 AAYAAABQAAAA Vg AH\n AAYAAAAA//k ABQAAAFYAAA Bb A Ac A Bg AAAAD/+QAFAAAA Ww AAAGAA Bw AGAAAAAP/ 5 AAUAAA Bg AAAA\n ZQAHAAYAAAAA//k ABQAAAGUAAA Bq A Ac A Bg AAAAD/+QAFAAA Aag AAAG 8 A Bw AGAAAA Af/ 8 AAMAAA Bv\n AAA Ac QAEAAYAAAAA//w A Aw ACAHEAAAB 0 AAYA Bg AAAAD/+g AE// 8 Ad AAAA Hg ABQAGAAAAAP/ 7 AAT/\n/g B 4 AAA Af AADAAYAAAAB//o A Bf//A Hw AAACAAAUA Bg AAAAD/+g AFAAA Ag AAAAIUA Bg AGAAAAAP/ 5 \n AAYAAQCFAAA Aiw AIAAYAAP////o A Bg AAA Is AAACSAAYA Bg AA////+g AFAAA Akg AAA Jg A Bg AGAAAA\n AP/ 6 AAUAAACYAAA An QAGAAYAAP////o ABQAAAJ 0 AAA Cj AAYA Bg AA////+g AFAAA Aow AAA Kk A Bg AG\n AAD//// 6 AAUAAA Cp AAA Arw AGAAYAAAAA//o ABQAAAK 8 AAAC 0 AAYA Bg AA////+g AGAAA At AAAA Ls A\n Bg AGAAAAAP/ 6 AAQAAAC 7 AAA Avw AGAAYAAP////o ABQAAAL 8 AAADFAAYA Bg AA////+g AGAAA Ax QAA\n A Mw A Bg AGAAD//// 6 AAUAAADMAAAA 0 g AGAAYAAP////o ABQAAANIAAADYAAYA Bg AA////+g AGAAAA\n 2 AAAAN 8 A Bg AGAAAAAP/ 6 AAUAAA Df AAAA 5 AAGAAYAAP////o ABQAAAOQAAA Dq AAYA Bg AAAAD/+g AF\n AAEA 6 g AAAO 8 A Bw AGAAD//// 6 AAYAAA Dv AAAA 9 g AGAAYAAAAA//o ABQAAAPYAAAD 7 AAYA Bg AA////\n+g AFAAAA+w AAAQEA Bg AGAAD//// 6 AAYAAAEBAAABCAAGAAYAAP////o A Bg AAA Qg AAAEPAAYA Bg AA\n////+g AGAAAB Dw AAARYA Bg AGAAAAAP/ 6 AAYAAAEWAAABHAAGAAYAAP////o A Bg AAA Rw AAA Ej AAYA\n Bg AAAAD/+g AFAAAB Iw AAA Sg A Bg AGAAAA Af/ 5 AAQAAQ Eo AAAB Kw AIAAYAAAAA//k ABAABA Ss AAA Ev\n A Ag A Bg AAAAH/+QAEAAEB Lw AAATIACAAGAAAAAP/ 5 AAX//A Ey AAAB Nw ADAAYAAAAAAAEA Bg ACA Tc A\n AAE 9 AAEA Bg AAAAH/+QAE//w BPQAAAUAA Aw AGAAAAAP/ 7 AAYAAAFAAAAB Rg AFAAYAAP////k ABQAA\n AUYAAAFMA Ac A Bg AAAAD/+w AFAAABTAAAAVEABQAGAAAAAP/ 5 AAYAAAFRAAAB Vw AHAAYAAAAA//s A\n BQAAA Vc AAA Fc AAUA Bg AAAAD/+QAFAAABXAAAAWEA Bw AGAAAAAP/ 7 AAYA Ag Fh AAAB Zw AHAAYAAP//\n//k ABQAAA Wc AAA Ft A Ac A Bg AAAAD/+QAGAAA Bb QAAAXMA Bw AGAAAAAP/ 5 AAQA Ag Fz AAA Bdw AJAAYA\n AP////k A Bg AAA Xc AAAF+A Ac A Bg AAAAD/+QAGAAA Bfg AAAYQA Bw AGAAD//// 7 AAUAAAGEAAA Big AF\n AAYAAP////s ABQAAA Yo AAAGQAAUA Bg AAAAD/+w AFAAA Bk AAAAZUABQAGAAD//// 7 AAUA Ag GVAAAB\nmw AHAAYAAAAA//s A Bg ACA Zs AAA Gh A Ac A Bg AAAAD/+w AGAAA Bo QAA Aac ABQAGAAAAAP/ 7 AAYAAA Gn\n AAA Br QAFAAYAAAAA//k A Bg AA Aa 0 AAA Gz A Ac A Bg AA////+w AGAAA Bsw AA Abo ABQAGAAD//// 7 AAUA\n AAG 6 AAA Bw AAFAAYAAP////s A Bg AA Ac AAAAHHAAUA Bg AAAAD/+w AGAAA Bxw AA Ac 0 ABQAGAAD//// 7 \n AAYA Ag HNAAAB 1 AAHAAYAAAAA//s ABQAA Ad QAAAHZAAUA Bg AAAAH/+QAFAAEB 2 QAA Ad 0 ACAAGAAAA\n Av/ 6 AAMAAQ Hd AAAB 3 g AHAAYAAAAA//k ABAAB Ad 4 AAA Hi A Ag A Bg AAAAD/+w AF// 0 B 4 g AA Aec A Ag AA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\n AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAB\n//s A Aw AC Aec AAA Hp A Ac A Bg AAAAD/+QAFAAEB 6 QAA Ae 4 ACAAGAAAAAP/ 5 AAYAAA Hu AAAB 9 AAHAAYA\n AAAA//o A Bf// Af QAAAH 5 AAUA Bg AAAAD/+QAGAAAB+QAA Af 8 A Bw AGAAAA Av/ 5 AAMA Ag H/AAACAAAJ\n AAYAAAAA//k ABQAB Ag AAAAIFA Ag A Bg AAAAH/+g AE//s CBQAA Agg AAQAGAAAAAP/ 5 AAYAAAIIAAAC\n Dg AHAAYAAAAB//k A Bf/+ Ag 4 AAAISAAUA Bg AA////+w AGAAAC Eg AA Ahk ABQAGAAAAAP/ 7 AAX//g IZ\n AAAC Hg ADAAYAAAAA//w A Bf/ 9 Ah 4 AAA Ij AAEA Bg AAAAD/+QAHAAAC Iw AA Aio A Bw AGAAAAAP/ 6 AAT/\n+w Iq AAAC Lg ABAAYAAAAA//k ABP/ 8 Ai 4 AAA Iy AAMA Bg AAAAD/+g AFAAAC Mg AA Ajc A Bg AGAAAA Af/ 5 \n AAT//QI 3 AAAC Og AEAAYAAAAB//k ABP/ 9 Ajo AAAI 9 AAQA Bg AAAAL/+QAE//s CPQAA Aj 8 A Ag AGAAD/\n/// 7 AAYA Ag I/AAAC Rg AHAAYAAAAA//k A Bg AB Ak YAAAJMA Ag A Bg AAAAH//AAD// 0 CTAAA Ak 4 AAQAG\n AAAA Af//AAQA Ag JOAAACUQADAAYAAAAB//k ABP/ 9 Al EAAAJUAAQA Bg AAAAH/+QAF// 4 CVAAA Alg A\n BQAGAAD//// 7 AAYAAAJYAAAC Xw AFAAYAAP////k A Bg AA Al 8 AAA Jm A Ac A Bg AA////+QAGAAAC Zg AA\n Am 0 A Bw AGAAD//// 5 AAYAAA Jt AAA Cd AAHAAYAAAAA//s ABQAC An QAAAJ 5 A Ac A Bg AA//// 9 w AGAAAC\ne QAA Ao AACQAGAAD//// 3 AAYAAAKAAAA Chw AJAAYAAP////c A Bg AA Aoc AAAKOA Ak A Bg AA//// 9 w AG\n AAA Cjg AA Ap UACQAGAAD//// 4 AAYAAAKVAAA Cn AAIAAYAAP////c A Bg AA Apw AAA Kj A Ak A Bg AA////\n+g AGAAA Cow AA Aqo A Bg AGAAAAAP/ 6 AAUA Ag Kq AAA Crw AIAAYAAP////c ABQAA Aq 8 AAAK 1 A Ak A Bg AA\n//// 9 w AFAAA Ct QAA Ars ACQAGAAD//// 3 AAUAAAK 7 AAA Cw QAJAAYAAP////g ABQAA As EAAALHA Ag A\n Bg AAAAD/ 9 w AEAAA Cxw AA Ass ACQAGAAAAAP/ 3 AAQAAALLAAA Czw AJAAYAAAAA//c ABAAA As 8 AAALT\n A Ak A Bg AAAAD/+AAEAAAC 0 w AA Atc ACAAGAAD//// 6 AAUAAALXAAAC 3 QAGAAYAAP////c A Bg AA At 0 A\n AA Lk A Ak A Bg AAAAD/ 9 w AFAAAC 5 AAA Auk ACQAGAAAAAP/ 3 AAUAAA Lp AAAC 7 g AJAAYAAAAA//c ABQAA\n Au 4 AAA Lz A Ak A Bg AAAAD/ 9 w AFAAAC 8 w AA Avg ACQAGAAAAAP/ 4 AAUAAAL 4 AAAC/QAIAAYAAAAA//o A\n Bf// Av 0 AAAMCAAUA Bg AA////+g AGAAAD Ag AA Awk A Bg AGAAD//// 3 AAYAAAMJAAADEAAJAAYAAP//\n//c A Bg AA Ax AAAAMXA Ak A Bg AA//// 9 w AGAAAD Fw AA Ax 4 ACQAGAAD//// 4 AAYAAAAAA Ao A Bw ASAAYA\n AP////c A Bg AAA Ac A Cg AOABMA Bg AA////+g AFAAAA Dg AKABQAEAAGAAD//// 6 AAYAAAAUA Ao A Gw AQ\n AAYAAAAA//g A Bg AAA Bs A Cg Ah ABIA Bg AAAAD/+AAGAAAAIQAKA Cc A Eg AGAAAAAP/ 4 AAYAAA An A Ao A\n LQASAAYAAAAA//g A Bg AAAC 0 A Cg Az ABIA Bg AAAAD/+QAGAAAA Mw AKA Dk AEQAGAAAAAP/ 3 AAYAAAA 5 \n A Ao A Pw ATAAYAAP////s ABQAAAD 8 A Cg BFAA 8 A Bg AAAAD/+w AFAAIARQAKA Eo AEQAGAAAAAP/ 4 AAUA\n AABKA Ao A Tw ASAAYAAAAA//g ABQAAAE 8 A Cg BUABIA Bg AAAAD/+AAFAAAAVAAKA Fk A Eg AGAAAAAP/ 5 \n AAUAAABZA Ao A Xg ARAAYAAAAA//g A Bg AAAF 4 A Cg Bk ABIA Bg AAAAD/+AAGAAAAZAAKA Go A Eg AGAAAA\n AP/ 4 AAYAAA Bq A Ao Ac AASAAYAAAAA//k A Bg AAAHAA Cg B 2 ABEA Bg AAAAD/+AAFAAA Adg AKA Hs A Eg AG\n AAD//// 4 AAYAAAB 7 A Ao Agg ASAAYAAAAA//g ABQAAAIIA Cg CHABIA Bg AAAAD/+AAFAAA Ahw AKA Iw A\n Eg AGAAAAAP/ 4 AAUAAACMA Ao Ak QASAAYAAAAA//g ABQAAAJEA Cg CWABIA Bg AAAAD/+QAFAAA Alg AK\n A Js AEQAGAAAAAP/ 6 AAX//w Cb A Ao Ao AAPAAYAAAAA//o ABQABAKAA Cg Cl ABEA Bg AA////+AAGAAAA\np QAKA Kw A Eg AGAAD//// 4 AAYAAA Cs A Ao Asw ASAAYAAP////g A Bg AAALMA Cg C 6 ABIA Bg AA////+QAG\n AAA Aug AKAMEAEQAGAAD//// 4 AAYA Ag DBA Ao Ay AAUAAYAAP////k ABQACA Mg A Cg DOABMA Bg AA////\n+QAGAAI Azg AKANUA Ew \n' Image open Bytes IO base 64 b64 decode '\ni VBO Rw 0 K Ggo AAAANS Uh E Ug AA Ax 4 AAAAUAQAAAA Ar Mt Zo AAA Ew El EQVR 4 n A Bl A Jr/AHVE 4 cz CI/ 4 u\n Mc 4 b 7 vuds/xzjz 5 / 3 / 7 u/n 9 v Me 7 vnf H/ 9 ++v Pn/xyf 5 zhxzjt 8 G Hw 8 + 2 d 83 u 8 x 27199 /nxu Q 6 Od 9 \n M 43 / 5 z 2 I+ 9 n 9 Ztm D Bw MQECDR Qw/e QI Qoh J Xxp BCNVE 6 QCCAAAAD//w Bl A Jr/ Ag A Lyj 1 t/w I Nwq 0 g\n Le NZ Uworu N 1 cj TP Izr TX 6 of H Weo 3 v 336 q Pzf Ew Rm Bn H Ttf 95 /fgl ZK 5 N 0 P Dgf R Tslp G Bvz 7 L Fc 4 F\n IUXBWQ Gj Q 5 MG Cx 34 EDF Pw Xi Y 4 Yb Yxavpnh H Frk 14 CDAAAAD//w Bl A Jr/ Ag Kq Roo H 2 g Ag Peggv UAA\n Bu 2 Wfg Po Awz RAABAAAAAAAC Qg Lz/ 3 Uv 4 Gv+g X 7 B Jg Dee GP 6 AAAD 1 NM Dz KHD 7 AN Wr 3 lo Ybxs AD 791 \n NAA Dfco I Dy P 44 K/jv 4 Y 63 /Z+t 98 Ovt+ub 4 T 48 LAAAAD//w Bl A Jr/ Aupl Ml ADJAAAA Gu Aph Wpqh Mx\nin 0 A/f Rv AYBAB Pg Bw B Ug ABBQ/s Y Ayv 9 g 0 b C Hg O Lo GAAAAAAAREA Aw I 7 nr 0 Ar Ypow 7 a X 8 // 9 La P/ 9 \n Sjdav WA 8 e P He BIKB// 81 / 83 ndzn Oa Xx 379 w AAAD//w Bl A Jr/ Aq Dx W+D 3 AABA Ab Uh/Q Mnb Qag/g AY\n AYDAAA Cgtg D/g Oq AAAB 5 IA/ 8 AA Ak+n 9 w 0 AAA 8 AA Am FR Ju Po 27 ci C 0 c D 5 oe W 4 E 7 KA/w D 3 ECM An 2 tt\ny 8 Pgw H 8 Af Ax Fz C 0 Jze A Mtrat As C/ffw AAAD//w Bl A Jr/BGK Ay CAA 4 AAA Avge YT Aw Hd 1 km QF 5 chk G\n A Bo MI Hc L 5 x Vp Tf Qb Uqdl AAA Erw AQ Bg AAEO Cl A 5 D 9 il 08 A Eh/t Uzd C Bs Xkbg ACED+wo Qg 8 Si 9 Veq Y\nl OD Cn 7 lm F 6 Nhn AE Yg AAA/NMIAAAAAAD// 2 Jgj L Zg VG Bg 5 Pv/ Tvpc 8 hw G Bj YGJA Dj H Dr Aw Pz Ajv/H\n/ Wf 3 Pz Cwtzcw Hm Bg Y Gcwb Zz 8 w Ha CAQMD Ow MDQ 8 MC Bg YOC 3 W 7 mp+f 0 w+w HO Yx O 3 OG+e 376 hs M Zjk 3 \n AAAAAP// Ym CMY 2 A 4 w MAIN 5 e 5 g QETPD 6 A Zis D Aw M Dgz SDAA Pj Byi Hc QMD Aw M Dg 1 n Oze 1 l By Ru 5 / 47 \nc 4859311 AYN Zzg 0 AAAAA// 9 i YGDB Yih OII Muw Ij GL 39 /fwff A 8 b//xv/P 2 B Ptzz Hw C Bj UQAAAAD/\n/y LF Br IBAAAA// 9 i 1 Hhcwdhiz X 7 u 8 NZ Nzy Lbv T 97 bfr Mf/QHI 8 ev Owc Sq GUJAAAA// 9 i YBB 81 i Sw\np EE 170 Qrg 5 MI Yyd Hqwd DQR Mr Awc Vr QAAAAD// 2 J 4 x 7 j 9 AAM Dn 8 Q/ Bg YL Boai Aww Mj Pdv MDBYM 1 Tv\no Jod AAAAAP// Yqo/ 83 +dxe P Wlxl 3 npsel 9 lv Lf Pcql E 9725 C+acf VLMEAAAA// 9 i+s 9 gw Coaa GMR\nevta/ 58 PTE Wzr 21 huf Pj A 8 N+qln Bw AAAAAD// 2 Ji W Lci 5 v 1 + Hm FX Dqcn ULE/ Mxg YG Bj+f 6 Ca JQAA\n AAD// 2 Ji 2 Frk Y 3 i Yp YC 5 q De Gge EM Aw P Dvw QB Bo Yvc Tw OVLMEAAAA// 9 is D Bgk P/// 0 E Og 9 z 35 v//\n Gc/ee W 7 Bw Pj 5 +QG Zh AN Usw MAAAD// 2 Jgq G Bg YG Bgq EM Xlvh MP Us AAAAA// 8 i Y Dd 1 AAAAAP// Aw DR\nw 7 Ik Ebzh VQAAAABJRU 5 Erk Jggg \n' return f
def make auth headers if not os path exists ' appveyor token' raise Runtime Error ' Pleasecreateafilenamed` appveyor token`inthecurrentdirectory Youcangetthetokenfromhttps //ci appveyor com/api-token' with open ' appveyor token' as f token f read strip headers {' Authorization' ' Bearer{}' format token }return headers
def compute neighbors image structure offset structure[tuple offset ] 0locations np transpose np nonzero structure sqdistances np sum locations - offset ** 2 axis 1 neighborhood np ravel multi index locations T image shape - np ravel multi index offset image shape astype np int 32 sorted neighborhood neighborhood[np argsort sqdistances ]return sorted neighborhood
@ Register With Arg Checks name 'neighbor get' req args [neighbors IP ADDRESS] def get neighbor conf neigh ip address neigh conf get neighbor conf neigh ip address return neigh conf settings
@receiver send user notification sender Course Creator def send user notification callback sender **kwargs user kwargs['user']updated state kwargs['state']studio request email settings FEATURES get 'STUDIO REQUEST EMAIL' '' context {'studio request email' studio request email}subject render to string 'emails/course creator subject txt' context subject '' join subject splitlines if updated state Course Creator GRANTED message template 'emails/course creator granted txt'elif updated state Course Creator DENIED message template 'emails/course creator denied txt'else message template 'emails/course creator revoked txt'message render to string message template context try user email user subject message studio request email except log warning ' Unabletosendcoursecreatorstatuse-mailto%s' user email
def background im size background None **kwargs if not background return imif not size[ 0 ] or not size[ 1 ] return im x y im sizeif x > size[ 0 ] and y > size[ 1 ] return imim colorspace im replace alpha background **kwargs new im Image new 'RGB' size background if new im mode im mode new im new im convert im mode offset size[ 0 ] - x // 2 size[ 1 ] - y // 2 new im paste im offset return new im
def validate nrows nrows msg "'nrows'mustbeaninteger"if nrows is not None if is float nrows if int nrows nrows raise Value Error msg nrows int nrows elif not is integer nrows raise Value Error msg return nrows
def test possible string format functions t Q Table [ [1 2] * u m ] t['col 0 '] info format '% 3f'assert t pformat ['col 0 ' 'm' '-----' '1 000 ' '2 000 '] t['col 0 '] info format 'hi{ 3f}'assert t pformat ['col 0 ' 'm' '--------' 'hi 1 000 ' 'hi 2 000 '] t['col 0 '] info format ' 4f'assert t pformat ['col 0 ' 'm' '------' '1 0000 ' '2 0000 ']
def add status query managers sender **kwargs if not issubclass sender Status Model returnfor value display in getattr sender u'STATUS' try sender meta get field value raise Improperly Configured u" Status Model Model'%s'hasafieldnamed'%s'whichconflictswithastatusofthesamename " % sender name value except Field Does Not Exist passsender add to class value Query Manager status value
def call url url view kwargs None func name func data app url map bind '' match url if view kwargs is not None func data update view kwargs view function view functions[func name]rv view function **func data rv unpack rv if isinstance rv werkzeug wrappers Base Response and rv status code in REDIRECT CODES redirect url rv headers[' Location']return call url redirect url return rv
def get subclasses c return c subclasses + sum map get subclasses c subclasses []
def get Carving file Name '' carving SVG Carving carving parse SVG file Name archive get File Text file Name return carving
def update index force False manager MANAGE Rif force with quiet run as root '% manager sclean' % locals run as root '% manager s-fupdate' % locals else run as root '% manager supdate' % locals
def function no Args return
def blacklist check path head tests dir os path split path dirname if tests dir u'tests' return True head top module os path split head return path purebasename in IGNORED TESTS get top module []
def get roles for user user db role names User Role Assignment query user user db name only 'role' scalar 'role' result Role query name in role names return result
def get List Table Elements list Dictionary list Dictionary Elements []for list Dictionary Value in list Dictionary values list Dictionary Elements + list Dictionary Valuereturn list Dictionary Elements
def detect stream try openpyxl reader excel load workbook stream return Trueexcept openpyxl shared exc Invalid File Exception pass
def set cover container cover path report None options None report report or lambda x x if container book type u'azw 3 ' set azw 3 cover container cover path report options options else set epub cover container cover path report options options
def strip rst role type str match REST ROLE PATTERN match type str if match return match group 1 else return type str
def fromstring html guess charset True parser None if not isinstance html strings raise Type Error 'stringrequired' doc document fromstring html parser parser guess charset guess charset start html[ 50 ] lstrip lower if start startswith '<html' or start startswith '< doctype' return dochead find tag doc 'head' if len head return docbody find tag doc 'body' if len body 1 and not body text or not body text strip and not body[ -1 ] tail or not body[ -1 ] tail strip return body[ 0 ]if contains block level tag body body tag 'div'else body tag 'span'return body
def get vcs root path previous path pathwhile get vcs info path is None path abspardir path if path previous path returnelse previous path pathreturn osp abspath path
def get ec 2 driver aws ec 2 get driver Provider EC 2 aws['access key'] aws['secret access token'] region aws['region'] return ec 2
@decorator decoratordef outplace f clip *a **k newclip clip copy f newclip *a **k return newclip
def is prerelease vers normalized version suggest normalized version vers if normalized is None return Trueparsed version normalized key normalized return any [any [ y in set ['a' 'b' 'c' 'rc' 'dev'] for y in x] for x in parsed]
def escape inp def conv obj ' Convertobj 'if isinstance obj list rv as unicode '[' + ' ' join conv o for o in obj + ']' elif isinstance obj dict rv as unicode '{' + ' ' join [ '%s %s' % conv key conv value for key value in obj iteritems ] + '}' else rv as unicode '"%s"' % as unicode obj replace '"' '\\"' return rvreturn conv inp
def virtual interface list name **kwargs conn get conn return conn virtual interface list name
def cache bank key fun **kwargs items cache fetch bank key if items is None items {}try item list fun **kwargs except Cloud Error as exc log warning ' Therewasaclouderrorcalling{ 0 }withkwargs{ 1 } {2 }' format fun kwargs exc for item in item list items[item name] object to dict item cache store bank key items return items
@register u'yank-last-arg' def yank last arg event n event arg if event arg present else None event current buffer yank last arg n
def rmtree errorhandler func path exc info exctype value exc info[ 2]if not exctype is Windows Error and value args[ 0 ] 5 or exctype is OS Error and value args[ 0 ] 13 raiseif os stat path st mode & stat S IREAD stat S IREAD raiseos chmod path stat S IWRITE func path
def p inclusive or expression 2 t pass
def ssh args ssh bin address ec 2 key pair file if ec 2 key pair file is None raise Value Error 'SS Hkeyfilepathis None' return ssh bin + ['-i' ec 2 key pair file '-o' ' Strict Host Key Checking no' '-o' ' User Known Hosts File /dev/null' 'hadoop@%s' % address ]
def get variable values sorted variable if variable is continuous return []try return sorted variable values key int except Value Error return variable values
def grains host protocol None port None username password find credentials DETAILS['host'] ret salt ['vsphere system info'] host host username username password password protocol protocol port port GRAINS CACHE update ret return GRAINS CACHE
def quota reserve context resources quotas deltas expire until refresh max age project id None is allocated reserve False return IMPL quota reserve context resources quotas deltas expire until refresh max age project id project id is allocated reserve is allocated reserve
def skip if predicate reason None reason reason or predicate name def decorate fn fn name fn name def maybe *args **kw if predicate msg "'%s'skipped %s" % fn name reason raise Skip Test msg else return fn *args **kw return function named maybe fn name return decorate
def make twilio request method uri **kwargs headers kwargs get 'headers' {} user agent 'twilio-python/%s Python%s ' % version platform python version headers[' User- Agent'] user agentheaders[' Accept- Charset'] 'utf- 8 'if method 'POST' and ' Content- Type' not in headers headers[' Content- Type'] 'application/x-www-form-urlencoded'kwargs['headers'] headersif ' Accept' not in headers headers[' Accept'] 'application/json'if kwargs pop 'use json extension' False uri + ' json'resp make request method uri **kwargs if not resp ok try error json loads resp content code error['code']message error['message']except code Nonemessage resp contentraise Twilio Rest Exception status resp status code method method uri resp url msg message code code return resp
def voronoi cells G center nodes weight 'weight' paths nx multi source dijkstra path G center nodes weight weight nearest {v p[ 0 ] for v p in paths items }cells groups nearest unreachable set G - set nearest if unreachable cells['unreachable'] unreachablereturn cells
def send Msg osc Address data Array [] ip Addr '127 0 0 1' port 9000 typehint None with osc Lock out Socket sendto create Binary Msg osc Address data Array typehint ip Addr port
def test if sys argv[ 1 ] if sys argv[ 2 ] sys stderr write 'usage pythondis py[- file]\n' sys exit 2 fn sys argv[ 1 ]if not fn or fn '-' fn Noneelse fn Noneif fn is None f sys stdinelse f open fn source f read if fn is not None f close else fn '<stdin>'code compile source fn 'exec' dis code
def fromstr string **kwargs return GEOS Geometry string **kwargs
def write corpus as vw corpus filename LOG debug u' Writingcorpusto %s' filename corpus size 0with utils smart open filename u'wb' as corpus file for line in corpus to vw corpus corpus file write line encode u'utf- 8 ' + '\n' corpus size + 1return corpus size
def font priority font style normal font[u'font-style'] u'normal' width normal font[u'font-stretch'] u'normal' weight normal font[u'font-weight'] u'normal' num normal sum filter None style normal width normal weight normal subfamily name font[u'wws subfamily name'] or font[u'preferred subfamily name'] or font[u'subfamily name'] if num normal 3 and subfamily name u' Regular' return 0if num normal 3 return 1if subfamily name u' Regular' return 2return 3 + 3 - num normal
@utils arg '--tenant' metavar '<tenant-id>' required True help 'I Doftenanttodeletequotafor ' @utils arg '--user' metavar '<user-id>' help 'I Dofusertodeletequotafor ' def do quota delete cs args cs quotas delete args tenant user id args user
def parse cost limit source cost pos source posdigits parse count source try return int digits except Value Error passraise error 'badfuzzycostlimit' source string cost pos
def wait timeout cloud server action for count in shade utils iterate timeout timeout ' Timeoutwaitingforservertocomplete%s' % action try server cloud get server server id except Exception continueif server status action map[action] returnif server status 'ERROR' module fail json msg ' Serverreached ERRO Rstatewhileattemptingto%s' % action
def test hermite kochanek bartels Chart datas chart Chart interpolate 'hermite' interpolation parameters {'type' 'kochanek bartels' 'b' -1 'c' 1 't' 1} chart make data chart datas assert chart render chart Chart interpolate 'hermite' interpolation parameters {'type' 'kochanek bartels' 'b' -1 'c' -8 't' 0} chart make data chart datas assert chart render chart Chart interpolate 'hermite' interpolation parameters {'type' 'kochanek bartels' 'b' 0 'c' 10 't' -1 } chart make data chart datas assert chart render
def get I Px domain try return socket gethostbyname ex domain [2 ]except Exception return False
def find variables data include named True found set def f val if not isinstance val basestring returnfor match in Template pattern finditer val name include named and match group 'named' or match group 'braced' if name is not None found add name recursive walk f data return found
def get Elements By Local Name child Nodes local Name elements By Local Name get Child Elements By Local Name child Nodes local Name for child Node in child Nodes if child Node get Node Type 1 elements By Local Name + child Node get Elements By Local Name local Name return elements By Local Name
def load Icon stock item id stock item getattr gtk stock item id local icon os path join GUI DATA PATH 'icons' '16 ' '%s png' % stock item if os path exists local icon im gtk Image im set from file local icon im show return im get pixbuf else icon theme gtk Icon Theme try icon icon theme load icon stock item 16 except icon load Image 'missing-image png' get pixbuf return icon
def write docstringdict filename 'turtle docstringdict' docsdict {}for methodname in tg screen functions key ' Screen ' + methodname docsdict[key] eval key doc for methodname in tg turtle functions key ' Turtle ' + methodname docsdict[key] eval key doc f open '%s py' % filename 'w' keys sorted [x for x in docsdict keys if x split ' ' [1 ] not in alias list ] f write 'docsdict {\n\n' for key in keys[ -1 ] f write '%s \n' % repr key f write '"""%s\n""" \n\n' % docsdict[key] key keys[ -1 ]f write '%s \n' % repr key f write '"""%s\n"""\n\n' % docsdict[key] f write '}\n' f close
def database exists name with settings hide 'running' 'stdout' 'stderr' 'warnings' warn only True return run as pg 'psql-d% name s-c""' % locals succeeded
@qutescheme add handler 'settings' backend usertypes Backend Qt Web Kit def qute settings url config getter functools partial objreg get 'config' get raw True html jinja render 'settings html' title 'settings' config configdata confget config getter return 'text/html' html
def splitdrive p if len p > 1 normp p replace altsep sep if normp[ 0 2] sep * 2 and normp[ 2 ] sep index normp find sep 2 if index -1 return '' p index 2 normp find sep index + 1 if index 2 index + 1 return '' p if index 2 -1 index 2 len p return p[ index 2 ] p[index 2 ] if normp[ 1 ] ' ' return p[ 2] p[ 2 ] return '' p
def get credit providers providers list None return Credit Provider get credit providers providers list providers list
def plot matches im 1 im 2 locs 1 locs 2 matchscores show below True im 3 appendimages im 1 im 2 if show below im 3 vstack im 3 im 3 imshow im 3 cols 1 im 1 shape[ 1 ]for i m in enumerate matchscores if m > 0 plot [locs 1 [i][ 1 ] locs 2 [m][ 1 ] + cols 1 ] [locs 1 [i][ 0 ] locs 2 [m][ 0 ]] 'c' axis 'off'
def pkcs i2 osp x x Len z RSA number long to bytes x padlen max 0 x Len - len z return '\x 00 ' * padlen + z
def link src dst if os name u'nt' if ctypes windll kernel 32 Create Hard Link W dst src 0 0 raise ctypes Win Error else os link src dst
def stop app instance app name port if not misc is app name valid app name logging error ' Unabletokillappprocess%sonport%dbecauseofinvalidnameforapplication' % app name int port return Falselogging info ' Stoppingapplication%s' % app name watch 'app ' + app name + '-' + str port if not monit interface stop watch is group False logging error ' Unabletostopapplicationserverforapp{ 0 }onport{ 1 }' format app name port return Falsemonit config file '{}/appscale-{} cfg' format MONIT CONFIG DIR watch try os remove monit config file except OS Error as os error logging error ' Errordeleting{ 0 }' format monit config file return True
def filter schemas schemas schema tables exclude table columns return [ filter schema s schema tables exclude table columns for s in schemas]
def echo class klass write sys stdout write for method in inspect getmembers klass inspect ismethod echo instancemethod klass method write for fn in inspect getmembers klass inspect isfunction if is static method fn klass setattr klass name fn staticmethod echo fn write else echo instancemethod klass fn write
def clear namespace ok names set default backend dict ok names update ['gl 2 ' 'glplus'] NS globals for name in list NS keys if name lower startswith 'gl' if name not in ok names del NS[name]
def iter Services xrd tree xrd get Yadis XRD xrd tree return prio Sort xrd findall service tag
def download restricted url filename age params {u'age limit' age u'skip download' True u'writeinfojson' True u'outtmpl' u'% id s % ext s'}ydl Youtube DL params ydl add default info extractors json filename os path splitext filename [0 ] + u' info json' try rm json filename ydl download [url] res os path exists json filename try rm json filename return res
def test nearmiss wrong version version 1000 nm 3 Near Miss version version random state RND SEED assert raises Value Error nm 3 fit sample X Y
@dispatch Expr object def pre compute leaf data scope None **kwargs return data
def Get Lines line strings lines []for line string in line strings line list map int line string split '-' 1 if line[ 0 ] < 1 raise errors Yapf Error 'invalidstartoflinerange %r' % line if line[ 0 ] > line[ 1 ] raise errors Yapf Error 'endcomesbeforestartinlinerange %r' line lines append tuple line return lines
def register return 'authz'
@require global staff@require POS Tdef enable certificate generation request course id None course key Course Key from string course id is enabled request POST get 'certificates-enabled' 'false' 'true' certs api set cert generation enabled course key is enabled return redirect instructor dash url course key section 'certificates'
def list plugins pluginlist os listdir PLUGINDIR ret []for plugin in pluginlist statf os path join PLUGINDIR plugin try executebit stat S IXUSR & os stat statf [stat ST MODE] except OS Error passif executebit ret append plugin return ret
def compute g n a compute a 2 * n g []for k in range n g append mp sqrt 2 * mp rf 0 5 k * a[ 2 * k ] return g
def set special user special cmd lst list tab user for cron in lst['special'] if special cron['spec'] and cmd cron['cmd'] return 'present'spec {'spec' special 'cmd' cmd}lst['special'] append spec comdat write cron lines user render tab lst if comdat['retcode'] return comdat['stderr']return 'new'
def set diff chunk generator class renderer assert rendererglobals [u' generator'] renderer
def should use proxy url no proxy None if no proxy is None no proxy effective os environ get 'no proxy' '' else no proxy effective no proxyurl Obj urlparse urlparse url as string url for np in [h strip for h in no proxy effective split ' ' ] if url Obj hostname np return Falsereturn True
def trim line line column 0 line line strip u'\n' ll len line if ll < 150 return lineif column > ll column llstart max column - 60 0 if start < 5 start 0end min start + 140 ll if end > ll - 5 end llif end ll start max end - 140 0 line line[start end]if end < ll line + u'{snip}'if start > 0 line u'{snip}' + line return line
def cluster status **kwargs return ceph cfg cluster status **kwargs
def task info format task info ref if task info ref is None return {}return {'task id' task info ref['task id'] 'input' task info ref['input'] 'result' task info ref['result'] 'message' task info ref['message']}
def pandas read text reader b header kwargs dtypes None columns None write header True enforce False bio Bytes IO if write header and not b startswith header rstrip bio write header bio write b bio seek 0 df reader bio **kwargs if dtypes coerce dtypes df dtypes if enforce and columns and list df columns list columns raise Value Error ' Columnsdonotmatch' df columns columns elif columns df columns columnsreturn df
def gaussian loglik scorer est X y None precision est get precision n samples n features X shapelog like np zeros n samples log like -0 5 * X * np dot X precision sum axis 1 log like - 0 5 * n features * log 2 0 * np pi - logdet precision out np mean log like return out
def get SSL Context keyfile os path join GAME DIR 'server' 'ssl key' certfile os path join GAME DIR 'server' 'ssl cert' verify SSL key and cert keyfile certfile return twisted ssl Default Open SSL Context Factory keyfile certfile
def mod aggregate low chunks running pkgs []agg enabled ['installed' 'latest' 'removed' 'purged']if low get 'fun' not in agg enabled return lowfor chunk in chunks tag salt utils gen state tag chunk if tag in running continueif chunk get 'state' 'pkg' if ' agg ' in chunk continueif chunk get 'fun' low get 'fun' continueif chunk get 'fromrepo' low get 'fromrepo' continueif 'pkgs' in chunk pkgs extend chunk['pkgs'] chunk[' agg '] Trueelif 'name' in chunk pkgs append chunk['name'] chunk[' agg '] Trueif pkgs if 'pkgs' in low low['pkgs'] extend pkgs else low['pkgs'] pkgsreturn low
def es delete cmd index noinput False log log try indexes [name for name count in get indexes ]except ES EXCEPTIONS log error ' Yourelasticsearchprocessisnotrunningor ES URL Sissetwronginyoursettings local pyfile ' returnif index not in indexes log error ' Index"%s"isnotavalidindex ' index returnif index in all read indexes and not noinput ret raw input '"%s"isareadindex Areyousureyouwanttodeleteit? yes/no ' % index if ret 'yes' log info ' Notdeletingtheindex ' returnlog info ' Deletingindex"%s" ' index delete index index log info ' Done '
def get subset from bitstring super set bitstring if len super set len bitstring raise Value Error ' Thesizesofthelistsarenotequal' return [super set[i] for i j in enumerate bitstring if bitstring[i] '1 ' ]
def get pending computer name current get computer name pending salt ['reg read value'] 'HKLM' 'SYSTEM\\ Current Control Set\\ Services\\ Tcpip\\ Parameters' 'NV Hostname' ['vdata']if pending return pending if pending current else None return False
def run migrations online connectable engine from config config get section config config ini section prefix 'sqlalchemy ' poolclass pool Null Pool with connectable connect as connection context configure connection connection target metadata target metadata with context begin transaction context run migrations
def is empty G return not any G adj values
def migrate registrations q5 metadata schema registrations Node find Q 'is registration' 'eq' True & Q 'registered schema' 'eq' schema total reg registrations count logger info ' Examining{}registrationsforq 5 metadata' format total reg reg count 0for reg in registrations reg count + 1if reg registered meta get schema id {} get 'q 5 ' {} get 'value' {} reg registered meta[schema id]['q 5 ']['value'] reg registered meta[schema id]['q 5 ']['value'] rstrip reg save logger info '{}/{} Migratedq 5 responsefor{}' format reg count total reg reg id else logger info '{}/{}q 5 notanswered Nochangeneededfor{} ' format reg count total reg reg id
def get random user agent return random choice user agents list
def p statement assign t names[t[ 1 ]] t[ 3 ]
def get preferred submodules if 'submodules' in modules db return modules db['submodules']mods ['numpy' 'scipy' 'sympy' 'pandas' 'networkx' 'statsmodels' 'matplotlib' 'sklearn' 'skimage' 'mpmath' 'os' 'PIL' ' Open GL' 'array' 'audioop' 'binascii' 'c Pickle' 'c String IO' 'cmath' 'collections' 'datetime' 'errno' 'exceptions' 'gc' 'imageop' 'imp' 'itertools' 'marshal' 'math' 'mmap' 'msvcrt' 'nt' 'operator' 'parser' 'rgbimg' 'signal' 'strop' 'sys' 'thread' 'time' 'wx' 'xxsubtype' 'zipimport' 'zlib' 'nose' ' Py Qt 4 ' ' Py Side' 'os path']submodules []for m in mods submods get submodules m submodules + submodsmodules db['submodules'] submodulesreturn submodules
@taskdef mongorestore ctx path drop False db settings DB NAM Eport settings DB POR Tcmd 'mongorestore--db{db}--port{port}' format db db port port pty True if settings DB USER cmd + '--username{ 0 }' format settings DB USER if settings DB PASS cmd + '--password{ 0 }' format settings DB PASS if drop cmd + '--drop'cmd + '' + path ctx run cmd echo True
def get permission cache user key from django core cache import cachereturn cache get get cache key user key version get cache permission version
def autolevel percentile image selem out None mask None shift x False shift y False p0 0 p1 1 return apply percentile cy autolevel image selem out out mask mask shift x shift x shift y shift y p0 p0 p1 p1
@addon view@non atomic requestsdef usage series request addon group start end format date range check series params or 404 group start end format check stats permission request addon series get series Theme User Count if addon type amo ADDON PERSONA else Update Count addon addon id date range date range if format 'csv' return render csv request addon series ['date' 'count'] elif format 'json' return render json request addon series
def test ada fit ada ADASYN random state RND SEED ada fit X Y assert equal ada min c 0 assert equal ada maj c 1 assert equal ada stats c [0 ] 8 assert equal ada stats c [1 ] 12
def render modal workflow request html template js template template vars None response keyvars []if html template html render to string html template template vars or {} request request response keyvars append u"'html' %s" % json dumps html if js template js render to string js template template vars or {} request request response keyvars append u"'onload' %s" % js response text u'{%s}' % u' ' join response keyvars return Http Response response text content type u'text/javascript'
@register simple tagdef static path return staticfiles storage url path
def iddp id eps A A np asfortranarray A k idx rnorms id iddp id eps A n A shape[ 1 ]proj A T ravel [ k * n - k ] reshape k n - k order 'F' return k idx proj
def get overrides for ccx ccx overrides cache request cache get cache 'ccx-overrides' if ccx not in overrides cache overrides {}query Ccx Field Override objects filter ccx ccx for override in query block overrides overrides setdefault override location {} block overrides[override field] json loads override value block overrides[ override field + ' id' ] override idblock overrides[ override field + ' instance' ] overrideoverrides cache[ccx] overridesreturn overrides cache[ccx]
def write fd data return Write Event fd data
def dropout layer state before use noise trng proj tensor switch use noise state before * trng binomial state before shape p 0 5 n 1 dtype state before dtype state before * 0 5 return proj
def make transform graph docs import inspectfrom textwrap import dedentfrom extern import sixfrom baseframe import Base Coordinate Frame frame transform graphisclass inspect isclasscoosys [item for item in six itervalues globals if isclass item and issubclass item Base Coordinate Frame ]graphstr frame transform graph to dot graph addnodes coosys docstr '\n Thediagrambelowshowsallofthecoordinatesystemsbuiltintothe\n`~astropy coordinates`package theiraliases usefulforconverting\nothercoordinatestothemusingattribute-styleaccess andthe\npre-definedtransformationsbetweenthem Theuserisfreeto\noverrideanyofthesetransformationsbydefiningnewtransformations\nbetweenthesesystems butthepre-definedtransformationsshouldbe\nsufficientfortypicalusage \n\n Thegraphalsoindicatesthepriorityforeachtransformationasa\nnumbernexttothearrow Theseprioritiesareusedtodecidethe\npreferredorderwhentwotransformationpathshavethesamenumber\nofsteps Theseprioritiesaredefinedsuchthatthepathwitha\n*smaller*totalpriorityisfavored \n\n\n graphviz \n\n'return dedent docstr + '' + graphstr replace '\n' '\n'
def subtract modulo image 1 image 2 image 1 load image 2 load return image 1 new image 1 im chop subtract modulo image 2 im
def is Large Same Direction inset loop radius if euclidean is Widdershins inset euclidean is Widdershins loop return Falsereturn get Is Large inset radius and len inset > 2
def Create Default GUI app Class None if app Class is None import intpyappapp Class intpyapp Interactive Python Appapp Class Init Instance
def bool val if isinstance val six string types and val lower 'false' return Falsereturn bool val
def build bond iface **settings deb major grains ['osrelease'][ 1]opts parse settings bond settings iface try template JINJA get template 'conf jinja' except jinja 2 exceptions Template Not Found log error ' Couldnotloadtemplateconf jinja' return ''data template render {'name' iface 'bonding' opts} if 'test' in settings and settings['test'] return read temp data write file iface data DEB NETWORK CONF FILES '{ 0 } conf' format iface path os path join DEB NETWORK CONF FILES '{ 0 } conf' format iface if deb major '5 ' for line type in 'alias' 'options' cmd ['sed' '-i' '-e' '/^{ 0 }\\s{ 1 } */d' format line type iface '/etc/modprobe conf'] salt ['cmd run'] cmd python shell False salt ['file append'] '/etc/modprobe conf' path salt ['kmod load'] 'bonding' salt ['pkg install'] 'ifenslave- 2 6' return read file path
def get unique variable name candidates tf get collection tf Graph Keys GLOBAL VARIABLES name if not candidates raise Value Error ' Couldntfindvariable%s' % name for candidate in candidates if candidate op name name return candidateraise Value Error ' Variable%sdoesnotuniquelyidentifyavariable' name
def hexify data chunksize None if chunksize is None chunksize hex chunksizehex data encode 'hex codec' l len hex if l > chunksize chunks []i 0while i < l chunks append hex[i i + chunksize ] i + chunksizehex '' join chunks return hex
def test hsl to rgb part 12 assert hsl to rgb 300 20 50 153 102 153 assert hsl to rgb 300 60 50 204 51 204 assert hsl to rgb 300 100 50 255 0 255
def get data url try request requests get url request raise for status except requests exceptions HTTP Error requests exceptions Connection Error as e raise Parse Error e items microdata get items request text for item in items if item itemtype [microdata URI 'http //schema org/ Recipe' ] return itemraise Parse Error ' Norecipedatafound'
def insert hyphens node hyphenator textattrs u'text' u'tail' if isinstance node lxml etree Entity textattrs u'tail' for attr in textattrs text getattr node attr if not text continuenew data u'' join [hyphenator inserted w hyphen u'\xad' for w in text split u'' ] if text[ 0 ] isspace new data u'' + new data if text[ -1 ] isspace new data + u''setattr node attr new data for child in node iterchildren insert hyphens child hyphenator
def get Top Paths paths top -9 876543219876543 e+ 17 for path in paths for point in path top max top point z return top
def normalize dictionary data dict for key value in data dict items if not isinstance key str del data dict[key]data dict[str key ] valuereturn data dict
@register filterdef display url url url force bytes url errors 'replace' return urllib unquote url decode 'utf- 8 ' errors 'replace'
def generative network z with slim arg scope [slim conv 2 d transpose] activation fn tf nn elu normalizer fn slim batch norm normalizer params {'scale' True} net tf reshape z [M 1 1 d] net slim conv 2 d transpose net 128 3 padding 'VALID' net slim conv 2 d transpose net 64 5 padding 'VALID' net slim conv 2 d transpose net 32 5 stride 2 net slim conv 2 d transpose net 1 5 stride 2 activation fn None net slim flatten net return net
def get file json path with open path u'r' as f return json load f
def ancestry path out []last path Nonewhile path path os path dirname path if path last path breaklast path pathif path out insert 0 path return out
def Classify Include fileinfo include is system is cpp h include in CPP HEADERS if is system and os path splitext include [1 ] in [' hpp' ' hxx' ' h++'] is system Falseif is system if is cpp h return CPP SYS HEADE Relse return C SYS HEADER target dir target base os path split Drop Common Suffixes fileinfo Repository Name include dir include base os path split Drop Common Suffixes include target dir pub os path normpath target dir + '/ /public' target dir pub target dir pub replace '\\' '/' if target base include base and include dir target dir or include dir target dir pub return LIKELY MY HEADE Rtarget first component RE FIRST COMPONENT match target base include first component RE FIRST COMPONENT match include base if target first component and include first component and target first component group 0 include first component group 0 return POSSIBLE MY HEADE Rreturn OTHER HEADER
def find dynamicsymbols expression exclude None t set {dynamicsymbols t}if exclude if iterable exclude exclude set set exclude else raise Type Error 'excludekwargmustbeiterable' else exclude set set return set [i for i in expression atoms Applied Undef Derivative if i free symbols t set ] - exclude set
def in 6 ismlladdr str return in 6 isincluded str 'ff 02 ' 16
def create ofb cipher factory **kwargs cipher state factory create base cipher kwargs iv kwargs pop 'IV' None IV kwargs pop 'iv' None if None None iv IV iv get random bytes factory block size if iv is not None if IV is not None raise Type Error " Youmusteitheruse'iv'or'IV' notboth" else iv I Vif kwargs raise Type Error ' Unknownparametersfor OFB %s' % str kwargs return Ofb Mode cipher state iv
def init mpstate return Cmdlong Module mpstate
def unpack callbacks cbs if cbs return [[i for i in f if i] for f in zip *cbs ]else return [ ]
def recreate field unbound if not isinstance unbound Unbound Field raise Value Error 'recreate fieldexpects Unbound Fieldinstance %swaspassed ' % type unbound return unbound field class *unbound args **unbound kwargs
def test attribute access can compile u' foobarbaz ' can compile u' foo[bar]baz ' can compile u' foobar[baz][ 0 ]quux[frob] ' can compile u' foobar[ +1234 ]quux[frob] ' cant compile u' foobar baz[ 0 ]quux[frob] ' cant compile u' foobarbaz 0 quux[frob] ' cant compile u' foobarbaz[ 0 ]quux{frob} '
def precedence state try return PRECEDENCE index state except Value Error return PRECEDENCE index None
def mult Mat Vect v A m1 B m2 if mult Mat Vect dot modulo is None A sym tensor lmatrix 'A' s sym tensor ivector 's' m sym tensor iscalar 'm' A2 sym tensor lmatrix 'A 2 ' s2 sym tensor ivector 's 2 ' m2 sym tensor iscalar 'm 2 ' o Dot Modulo A sym s sym m sym A2 sym s2 sym m2 sym mult Mat Vect dot modulo function [A sym s sym m sym A2 sym s2 sym m2 sym] o profile False f mult Mat Vect dot modulof input storage[ 0 ] storage[ 0 ] Af input storage[ 1 ] storage[ 0 ] v[ 3]f input storage[ 2 ] storage[ 0 ] m1 f input storage[ 3 ] storage[ 0 ] Bf input storage[ 4 ] storage[ 0 ] v[ 3 ]f input storage[ 5 ] storage[ 0 ] m2 f fn r f output storage[ 0 ] storage[ 0 ]return r
def endit end clock total end - START print ' Completiontime {0 }seconds ' format total
def get isnan dtype if isinstance dtype types Float types Complex return np isnanelse @register jitabledef trivial isnan x return Falsereturn trivial isnan
@validate 'form' def valid att in label arch return not arch xpath '//label[not @foror@string ]'
def decrypt int cyphertext dkey n assert int cyphertext 'cyphertext' assert int dkey 'dkey' assert int n 'n' message pow cyphertext dkey n return message
def notify context message priority message get 'priority' CONF default notification level priority priority lower logger logging get Logger 'glance openstack common notification %s' % message['event type'] getattr logger priority jsonutils dumps message
def burt table data variables values [ var value for var in variables for value in var values]table numpy zeros len values len values counts [len attr values for attr in variables]offsets numpy r [ 0 numpy cumsum counts ]for i in range len variables for j in range i + 1 var 1 variables[i]var 2 variables[j]cm contingency get contingency data var 2 var 1 start 1 end 1 offsets[i] offsets[i] + counts[i] start 2 end 2 offsets[j] offsets[j] + counts[j] table[start 1 end 1 start 2 end 2 ] + cmif i j table[start 2 end 2 start 1 end 1 ] + cm Treturn values table
def Element tag *args **kw if '{' not in tag tag '{%s}%s' % atom ns tag return atom parser makeelement tag *args **kw
def assert calculated changes for deployer case deployer node state node config nonmanifest datasets additional node states additional node config expected changes local state leases Leases cluster state compute cluster state node state additional node states nonmanifest datasets cluster configuration Deployment nodes {node config} additional node config leases leases changes deployer calculate changes cluster configuration cluster state local state case assert Equal expected changes changes
def pickle dump data filename fh open filename 'w' try pickle dump data fh finally fh close
def stack tup axis 0 return concatenate [cupy expand dims x axis for x in tup] axis
def set permissions vhost user conf ' *' write ' *' read ' *' runas None if runas is None and not salt utils is windows runas salt utils get user res salt ['cmd run all'] [ context ['rabbitmqctl'] 'set permissions' '-p' vhost user conf write read] runas runas python shell False msg ' Permissions Set'return format response res msg
def generate output dataframe data subset defaults cols set data subset columns desired cols set defaults data subset drop cols - desired cols axis 1 inplace True for col in desired cols - cols data subset[col] defaults[col]return data subset
def make choices choices return list zip choices choices
def get Evaluated Expression Value By Split Line words xml Element evaluators []for word Index word in enumerate words next Word ''next Word Index word Index + 1 if next Word Index < len words next Word words[next Word Index]evaluator get Evaluator evaluators next Word word xml Element if evaluator None evaluators append evaluator while get Brackets Exist evaluators passevaluated Expression Value Evaluators get Evaluated Expression Value Evaluators evaluators if len evaluated Expression Value Evaluators > 0 return evaluated Expression Value Evaluators[ 0 ] valuereturn None
def click component from menu category component type is advanced if is advanced world retry on exception click advanced ignored exceptions Assertion Error link world retry on exception lambda find matching button category component type ignored exceptions Assertion Error world retry on exception lambda link click
def process SVG Elementtext element Node svg Reader if svg Reader y Axis Pointing Upward returnfont Family get Style Value ' Gentium Basic Regular' element Node 'font-family' font Size get Right Strip Alphabet Percent get Style Value '12 0' element Node 'font-size' matrix SVG get Chain Matrix SVG If Necessary element Node svg Reader y Axis Pointing Upward loop Layer svg Reader get Loop Layer translate euclidean get Complex Default By Dictionary Keys complex element Node attributes 'x' 'y' for text Complex Loop in get Text Complex Loops font Family font Size element Node get Text Content svg Reader y Axis Pointing Upward translated Loop []for text Complex Point in text Complex Loop translated Loop append text Complex Point + translate loop Layer loops append matrix SVG get Transformed Path translated Loop
def set Closed Attribute revolutions xml Element xml Element attribute Dictionary['closed'] str evaluate get Evaluated Boolean Default revolutions < 1 'closed' xml Element lower
def default environment return dict VARS
def get cache key user or username size prefix if isinstance user or username get user model user or username get username user or username key six u '%s %s %s' % prefix user or username size return six u '%s %s' % slugify key [ 100 ] hashlib md 5 force bytes key hexdigest
def storage uri for key key if not isinstance key boto s3 key Key raise Invalid Uri Error ' Requestedkey %s isnotasubclassofboto s3 key Key' % str type key prov name key bucket connection provider get provider name uri str '%s //%s/%s' % prov name key bucket name key name return storage uri uri str
def magic memit self line '' opts stmt self parse options line 'r t' posix False strict False repeat int getattr opts 'r' 1 if repeat < 1 repeat 1 timeout int getattr opts 't' 0 if timeout < 0 timeout Nonemem usage []for in range repeat tmp memory usage func exec stmt self shell user ns timeout timeout mem usage extend tmp if mem usage print 'maximumof%d %f M Bperloop' % repeat max mem usage else print 'ERROR couldnotreadmemoryusage trywithalowerintervalormoreiterations'
def read py file filename skip encoding cookie True with open filename as f if skip encoding cookie return '' join strip encoding cookie f else return f read
def format number value max digits decimal places if value is None return Noneif isinstance value decimal Decimal context decimal getcontext copy if max digits is not None context prec max digitsif decimal places is not None value value quantize decimal Decimal ' 1' ** decimal places context context else context traps[decimal Rounded] 1value context create decimal value return '{ f}' format value if decimal places is not None return '% *f' % decimal places value return '{ f}' format value
def root mean square error y real y pred y real y pred check arrays y real y pred return np sqrt np sum y pred - y real ** 2 / y real shape[ 0 ]
def factor calculate evaluator types operator for typ in types if operator '-' if is number typ yield create evaluator - typ obj elif operator 'not' value typ py bool if value is None return yield create evaluator not value else yield typ
def start name cmd ['service' name 'start']return not salt ['cmd retcode'] cmd python shell False
def get command args zone get zone args project id args name if not zone print ' Zonenotfound 'else print ' Zone {} {} {}' format zone name zone dns name zone description
def has change path cmd sql return u'setsearch path' in sql lower
def sanitize file name name substitute ' ' as unicode False if isinstance name unicode name name encode filesystem encoding 'ignore' one filename sanitize sub substitute name one re sub '\\s' '' one strip bname ext os path splitext one one re sub '^\\ +$' ' ' bname if as unicode one one decode filesystem encoding one one replace ' ' substitute one + extif one and one[ -1 ] in ' ' '' one one[ -1 ] + ' ' if one startswith ' ' one ' ' + one[ 1 ] return one
def get reader identity global FORMAT READER Sif FORMAT READERS is None import readers return FORMAT READERS get identity None
@register inclusion tag 'addons/review list box html' @jinja 2 contextfunctiondef review list box context addon reviews c dict context items c update addon addon reviews reviews return c
def get if addr 6 iff for x in in 6 getifaddr if x[ 2 ] iff and x[ 1 ] IPV 6 ADDR GLOBAL return x[ 0 ]return None
def check integrity models messages dict error [] warning [] for model in models validators []for name in dir model if not name startswith ' check' continueobj getattr model name if getattr obj 'validator type' None validators append obj for func in validators messages[func validator type] extend func for msg in sorted messages['error'] logger error 'E-%d %s %s %s' % msg for msg in sorted messages['warning'] logger warning 'W-%d %s %s %s' % msg
def restore nodes global FAKE NODES FAKE NODES ['fake-mini']
def get user impact score user id model user models User Stats Model get user id strict False if model return model impact scoreelse return 0
def hard sigmoid x return Hard Sigmoid x
def virtual if not HAS ELASTICSEARCH return False ' Cannotloadmoduleelasticsearch elasticsearchlibrariesnotfound' return True
def split line endings data lines NEWLINE RE split data if not lines[ -1 ] lines lines[ -1 ]return lines
def description setter registry xml parent data descriptionsetter XML Sub Element xml parent 'hudson plugins descriptionsetter Description Setter Publisher' XML Sub Element descriptionsetter 'regexp' text data get 'regexp' '' XML Sub Element descriptionsetter 'regexp For Failed' text data get 'regexp-for-failed' '' if 'description' in data XML Sub Element descriptionsetter 'description' text data['description']if 'description-for-failed' in data XML Sub Element descriptionsetter 'description For Failed' text data['description-for-failed']for matrix str data get 'set-for-matrix' False lower XML Sub Element descriptionsetter 'set For Matrix' text for matrix
def kit export csv output ''for resourcename in ['kit' 'item' 'kit item'] table module + ' ' + resourcename table db[ table]query auth s3 accessible query 'read' table if 'deleted' in table query table deleted False table deleted None & query output + 'TABLE' + table + '\n' output + str db query select output + '\n\n'import gluon contenttyperesponse headers[' Content- Type'] gluon contenttype contenttype ' csv' filename '%s kits csv' % request env server name response headers[' Content-disposition'] 'attachment filename %s' % filename return output
def register detector cls detectorshub register cls return cls
def sensitive variables *variables def decorator func @functools wraps func def sensitive variables wrapper *args **kwargs if variables sensitive variables wrapper sensitive variables variableselse sensitive variables wrapper sensitive variables ' ALL 'return func *args **kwargs return sensitive variables wrapperreturn decorator
def getregentry return registry 'latex'
def get jid jid options get options ret None response request 'GET' options['url'] + options['db'] + '/' + jid if 'error' in response log error ' Unabletoget JID"{ 0 }" "{ 1 }"' format jid response return {}return { response['id'] response}
def RANGE value if u' ' in value start stop value split u' ' 1 start UINT start if stop strip stop UINT stop if start > stop raise Value Error u' Endmustbelargerthanstart' else stop Noneelse start UINT value stop start + 1 return slice start stop
def check version name url version expected if expected is None return Falseif Loose Version version < Loose Version expected print u'***{ 0 }<{ 1 }>istooold ***' format name url print u' Installedversion{ 0 } required{ 1 }' format version expected return Truereturn False
def os bootstrap names sys builtin module namesjoin Noneif 'posix' in names sep '/'from posix import statelif 'nt' in names sep '\\'from nt import statelif 'dos' in names sep '\\'from dos import statelif 'os 2 ' in names sep '\\'from os 2 import statelse raise Import Error 'noosspecificmodulefound'if join is None def join a b sep sep if a '' return blastchar a[ -1 ]if lastchar '/' or lastchar sep return a + b return a + sep + b global os stat os stat statglobal os path join os path join join
def tokenize sql encoding None return Lexer get tokens sql encoding
def clear BACKEND clear
def includeme config settings config get settings config include 'pyramid tm' session factory get session factory get engine settings config registry['dbsession factory'] session factoryconfig add request method lambda r get tm session session factory r tm 'dbsession' reify True
def map fragment list flist reflist mapped []for f in flist rank []for i in range 0 len reflist rf reflist[i]rms f - rf rank append rms rf rank sort fragment rank[ 0 ][ 1 ]mapped append fragment return mapped
def test magic rerun ip get ipython ip run cell 'a 10 ' store history True ip run cell 'a+ 1' store history True nt assert equal ip user ns['a'] 11 ip run cell '%rerun' store history True nt assert equal ip user ns['a'] 12
def dump data stream None **kwargs kwargs[' Dumper'] Astropy Dumperreturn yaml dump data stream stream **kwargs
def get foreign keys t images t image members t image properties dialect foreign keys []if t image members foreign keys img members fk name list t image members foreign keys [0 ] nameif dialect 'mysql' fk 1 migrate Foreign Key Constraint [t image members c image id] [t images c id] name img members fk name else fk 1 migrate Foreign Key Constraint [t image members c image id] [t images c id] foreign keys append fk 1 if t image properties foreign keys img properties fk name list t image properties foreign keys [0 ] nameif dialect 'mysql' fk 2 migrate Foreign Key Constraint [t image properties c image id] [t images c id] name img properties fk name else fk 2 migrate Foreign Key Constraint [t image properties c image id] [t images c id] foreign keys append fk 2 return foreign keys
def bytes 2 int bytes if not type bytes is types List Type or type bytes is types String Type raise Type Error ' Youmustpassastringoralist' integer 0for byte in bytes integer * 256 if type byte is types String Type byte ord byte integer + bytereturn integer
def Check Free Space if cfg download free and not sabnzbd downloader Downloader do paused if misc diskfree cfg download dir get path < cfg download free get float / GIGI logging warning T ' Toolittlediskspaceforcing PAUSE' Downloader do pause save False emailer diskfull
def find unit course url def find node url '\n Findnodeincoursetreeforurl \n'if node location to deprecated string url return nodefor child in node get children found find child url if found return foundreturn Noneunit find course url if unit is None raise Dashboard Error " Couldn'tfindmoduleforurl {0 }" format url return unit
def configure registry client global CLIENT KWARGS CLIENT HOST CLIENT POR Ttry host port CONF registry host CONF registry port except cfg Config File Value Error msg ' Configurationoptionwasnotvalid' LOG error msg raise exception Bad Registry Connection Configuration msg except Index Error msg ' Couldnotfindrequiredconfigurationoption' LOG error msg raise exception Bad Registry Connection Configuration msg CLIENT HOST host CLIENT PORT port CLIENT KWARGS {'use ssl' CONF registry client protocol lower 'https' 'key file' CONF registry client key file 'cert file' CONF registry client cert file 'ca file' CONF registry client ca file 'insecure' CONF registry client insecure 'timeout' CONF registry client timeout}if not CONF use user token configure registry admin creds
def email outbox if not auth s3 logged in session error T ' Requires Login ' redirect URL c 'default' f 'user' args 'login' tablename 'msg email'table s3 db msg emails 3 filter table inbound False table inbound readable Falses 3 crud strings[tablename] Storage title display T ' Email Details' title list T ' Sent Emails' label list button T ' View Sent Emails' label delete button T ' Delete Email' msg record deleted T ' Emaildeleted' msg list empty T ' No Emailscurrentlyin Outbox' def postp r output if isinstance output dict add btn A T ' Compose' class 'action-btn' href URL f 'compose' output['rheader'] add btnreturn outputs 3 postp postps 3 db configure tablename editable False insertable False listadd False list fields ['id' 'date' 'to address' 'subject' 'body'] return s3 rest controller module 'email'
def get data files dirs results []for directory in dirs for root dirs files in os walk directory files [os path join root file for file in files]results append root files return results
def init mpstate return Go Pro Module mpstate
@contextfunctiondef easy invite block context emails None if emails is None emails []request context['request']response format 'html'if 'response format' in context response format context['response format']return Markup render to string 'core/tags/easy invite' {'emails' emails} context instance Request Context request response format response format
def lod sort by key list indexkey list sort lambda a b a[indexkey] < b[indexkey] return list
def set default encoding file file global default encoding filedefault encoding file file
def add Faces By Convex faces indexed Loop if len indexed Loop < 3 returnindex Begin indexed Loop[ 0 ] indexfor indexed Point Index in xrange 1 len indexed Loop - 1 index Center indexed Loop[indexed Point Index] indexindex End indexed Loop[ indexed Point Index + 1 % len indexed Loop ] indexif index Begin index Center and index Center index End and index End index Begin face From Convex face Face face From Convex index len faces face From Convex vertex Indexes append index Begin face From Convex vertex Indexes append index Center face From Convex vertex Indexes append index End faces append face From Convex
def bytes to json value if isinstance value bytes value base 64 encodestring value return value
def get public key ssh conf path os path expanduser '~/ ssh' dsa public key path os path join ssh conf path 'id dsa pub' dsa private key path os path join ssh conf path 'id dsa' rsa public key path os path join ssh conf path 'id rsa pub' rsa private key path os path join ssh conf path 'id rsa' has dsa keypair os path isfile dsa public key path and os path isfile dsa private key path has rsa keypair os path isfile rsa public key path and os path isfile rsa private key path if has dsa keypair logging info 'DS Akeypairfound usingit' public key path dsa public key pathelif has rsa keypair logging info 'RS Akeypairfound usingit' public key path rsa public key pathelse logging info ' Neither RS Anor DS Akeypairfound creating DS Asshkeypair' utils system 'ssh-keygen-tdsa-q-N""-f%s' % dsa private key path public key path dsa public key pathpublic key open public key path 'r' public key str public key read public key close return public key str
def get addons request addons addon id action items []a Menu Item a selected not addon id a text a url ' All My Add-ons' reverse 'devhub feed all' if action a url + '?action ' + action items append a for addon in addons item Menu Item try item selected addon id and addon id int addon id except Value Error passurl reverse 'devhub feed' args [addon slug] if action url + '?action ' + action item text item url addon name url items append item return items
def wrap clause in parens sql if sql strip sql u' {} ' format sql return sa text sql
def sleep duration f Future IO Loop current call later duration lambda f set result None return f
def get effective user requesting user target username if target username requesting user username return requesting userelif target username '' return Anonymous User elif can view courses for username requesting user target username return User objects get username target username else raise Permission Denied
def request from dict d spider None cb d['callback']if cb and spider cb get method spider cb eb d['errback']if eb and spider eb get method spider eb return Request url to native str d['url'] callback cb errback eb method d['method'] headers d['headers'] body d['body'] cookies d['cookies'] meta d['meta'] encoding d[' encoding'] priority d['priority'] dont filter d['dont filter']
def mark plot labels app document for name explicit in six iteritems document nametypes if not explicit continuelabelid document nameids[name]if labelid is None continuenode document ids[labelid]if node tagname in u'html only' u'latex only' for n in node if n tagname u'figure' sectname namefor c in n if c tagname u'caption' sectname c astext breaknode[u'ids'] remove labelid node[u'names'] remove name n[u'ids'] append labelid n[u'names'] append name document settings env labels[name] document settings env docname labelid sectname break
def set Up test db force False global TESTDB INITALIZE Dif not TESTDB INITALIZED or force tear Down test db Main DB initialize Cache DB initialize Failed DB initialize TESTDB INITALIZED True
def get nll x parzen batch size 10 inds range x shape[ 0 ] n batches int numpy ceil float len inds / batch size times []nlls []for i in range n batches begin time time nll parzen x[inds[i n batches]] end time time times append end - begin nlls extend nll if i % 10 0 print i numpy mean times numpy mean nlls return numpy array nlls
def slow t t slow Truereturn t
def abstract Path case return md 5 case mktemp hexdigest
def tile key layer coord format path '' path path strip '/' name layer name tile '% zoom d/% column d/% row d' % coord dict ext format lower return str '% path s/% name s/% tile s % ext s' % locals
def add kdb reader sub signature cls kdb readers[sub signature] cls
def monitor load globals sock filename ext return communicate sock ' load globals ' settings [filename ext]
def get loc if LOC KEY in context return context [LOC KEY]
def token view request return Http Response render csrf token template request
def update stylesheet obj get stylesheet cache clear if not sip isdeleted obj obj set Style Sheet get stylesheet obj STYLESHEET
def make range iterator typ return cgutils create struct proxy typ
def time difference date 1 date 2 later mktime date 1 timetuple + date 1 microsecond / 1000000 0 earlier mktime date 2 timetuple + date 2 microsecond / 1000000 0 return later - earlier
def get data files import sysfrom os path import join abspath dirname exists splitpath abspath dirname file starting points [path]if not path startswith sys prefix starting points append sys prefix for path in starting points while path '/' share jupyter join path 'share' 'jupyter' 'hub' if exists join share jupyter 'static' 'components' return share jupyter path split path return ''
def get demography template stream model tp dir None if tp dir is None filename sep join [builtin tpl dir model + ' par' ] else filename sep join [tp dir model + ' par' ] with open filename 'r' as f l f readline while l '' stream write l l f readline
def new data None return SHA 224 Hash new data
def decode Inventory Entry level 2 document count Inventory str document for token in document if token dep u'pobj' or u'meta' and token pos u'NOUN' or u'NNS' or u'NN' item ''for i in token children item + '' + str i item + '' + str token count item itemif token head dep u'prep' breakelse amount Unit token head headcount unit str amount Unit for inner in amount Unit children if inner pos u'NUM' count amount + str inner return count
def test iba sklearn metrics y true y pred make prediction binary True acc make index balanced accuracy alpha 0 5 squared True accuracy score score acc y true y pred assert equal score 0 54756 jss make index balanced accuracy alpha 0 5 squared True jaccard similarity score score jss y true y pred assert equal score 0 54756 pre make index balanced accuracy alpha 0 5 squared True precision score score pre y true y pred assert equal score 0 65025 rec make index balanced accuracy alpha 0 5 squared True recall score score rec y true y pred assert equal score 0 4161600000000001
@conf commands registerdef split layers lower upper fval None **fval if fval is not None fval update fval split bottom up lower upper **fval split top down lower upper **fval
def check classification targets y y type type of target y if y type not in ['binary' 'multiclass' 'multiclass-multioutput' 'multilabel-indicator' 'multilabel-sequences'] raise Value Error ' Unknownlabeltype %r' % y type
def image meta system metadata image meta {}for md key md value in system metadata iteritems if md key startswith 'image ' image meta[md key[ 6 ]] md valuereturn image meta
def build encoder tparams options im tensor matrix 'im' dtype 'float 32 ' s tensor matrix 's' dtype 'float 32 ' eim get layer 'ff' [1 ] tparams im options prefix 'ff im' activ 'linear' es get layer 'ff' [1 ] tparams s options prefix 'ff s' activ 'linear' lim l2 norm eim ls l2 norm es return [im s] lim ls
def optimal mode data if data isdigit return MODE NUMBE Rif RE ALPHA NUM match data return MODE ALPHA NU Mreturn MODE 8BIT BYTE
def get rpc server target endpoint serializer Request Context Serializer Json Payload Serializer access policy dispatcher Default RPC Access Policyreturn oslo messaging get rpc server TRANSPORT target [endpoint] executor 'eventlet' serializer serializer access policy access policy
def virtual if HAS HEAT and HAS OSLO return 'heat'return False ' Theheatexecutionmodulecannotbeloaded theheatclientandoslo serializationpythonlibraryisnotavailable '
def Date Time 2 literal d c return string literal format TIMESTAMP d c
def test broadcast dims test 1 2 3 test 2 1 3 test 2 3 1 test 2 1 2 3 test 2 2 1 3 test 2 2 3 1
def strip course id path course id unicode FAKE COURSE KEY return path split course id [0 ]
def parse environ block data ret {}pos 0WINDOWS WINDOW Swhile True next pos data find '\x 00 ' pos if next pos < pos breakequal pos data find ' ' pos next pos if equal pos > pos key data[pos equal pos]value data[ equal pos + 1 next pos]if WINDOWS key key upper ret[key] valuepos next pos + 1 return ret
def dmp eval tail f A u K if not A return fif dmp zero p f u return dmp zero u - len A e rec eval tail f 0 A u K if u len A - 1 return eelse return dmp strip e u - len A
def dnn gradweight img topgrad kerns shp border mode 'valid' subsample 1 1 conv mode 'conv' img gpu contiguous img topgrad gpu contiguous topgrad kerns shp theano tensor as tensor variable kerns shp desc Gpu Dnn Conv Desc border mode border mode subsample subsample conv mode conv mode img shape kerns shp out gpu alloc empty *kerns shp return Gpu Dnn Conv Grad W img topgrad out desc
def check valid naming pattern None multi None if pattern is None pattern sickbeard NAMING PATTER Nlogger log u' Checkingwhetherthepattern' + pattern + 'isvalidforasingleepisode' logger DEBUG valid validate name pattern None if multi is not None logger log u' Checkingwhetherthepattern' + pattern + 'isvalidforamultiepisode' logger DEBUG valid valid and validate name pattern multi return valid
def script vm deploy script salt utils cloud os script config get cloud config value 'script' vm opts vm opts salt utils cloud salt config to yaml salt utils cloud minion config opts vm return deploy script
def strip src text pattern text multi line commentpattern text + u' ' + single line comment pattern text + u' ' + single quoted character pattern text + u' ' + double quoted string pattern text + u' ' + preprocessor directive pattern re compile pattern text re M re S striped src text pattern sub u'' src text return striped src text
def libvlc vlm add input p instance psz name psz input f Cfunctions get 'libvlc vlm add input' None or Cfunction 'libvlc vlm add input' 1 1 1 None ctypes c int Instance ctypes c char p ctypes c char p return f p instance psz name psz input
def soft unicode s if not isinstance s text type s text type s return s
def is true value None try value int value except Value Error Type Error passtry value float value except Value Error Type Error passif isinstance value int float return value > 0 elif isinstance value six string types return str value lower 'true' else return bool value
def subs value subs {'group Of Names' ['nova Project']}if value in subs return [value] + subs[value] return [value]
def clear context context for var in x for x in context if x startswith 'chocolatey ' context pop var
def appendimages im 1 im 2 rows 1 im 1 shape[ 0 ]rows 2 im 2 shape[ 0 ]if rows 1 < rows 2 im 1 concatenate im 1 zeros rows 2 - rows 1 im 1 shape[ 1 ] axis 0 elif rows 1 > rows 2 im 2 concatenate im 2 zeros rows 1 - rows 2 im 2 shape[ 1 ] axis 0 return concatenate im 1 im 2 axis 1
def redirect url status '301 Moved Permanently' newloc urlparse urljoin context home + context path url context status statusheader ' Content- Type' 'text/html' header ' Location' newloc
def script from examples s output []for piece in Doc Test Parser parse s if isinstance piece Example output append piece source[ -1 ] want piece wantif want output append '# Expected ' output + [ '##' + l for l in want split '\n' [ -1 ]]else output + [ comment line l for l in piece split '\n' [ -1 ]]while output and output[ -1 ] '#' output pop while output and output[ 0 ] '#' output pop 0 return '\n' join output + '\n'
def in bounds x lb ub return np all x > lb & x < ub
def isgeneratorfunction object return bool isfunction object or ismethod object and object func code co flags & CO GENERATOR
def is msie 8 or 9 if request user agent is None or request user agent browser 'msie' or request user agent version is None return Falseversion tuple map int request user agent version split ' ' return 8 0 < version < 10 0
def render sls data saltenv 'base' sls '' **kws with warnings catch warnings record True as warn list data deserialize sls data or {} for item in warn list log warning '{warn}foundin{sls}saltenv {env}' format warn item message sls salt utils url create sls env saltenv log debug ' Resultsof SL Srendering \n{ 0 }' format data return data
def is protected type obj return isinstance obj six integer types + type None float Decimal datetime datetime datetime date datetime time
def mkswap device if not ismounted device run as root 'mkswap% device s' % locals else abort 'swappartitionismounted'
def sinh x np import module 'numpy' if isinstance x int float return interval np sinh x np sinh x elif isinstance x interval return interval np sinh x start np sinh x end is valid x is valid else raise Not Implemented Error
def escape rfc 3986 s if sys version info < 3 0 and isinstance s unicode s s encode u'utf- 8 ' return compat urllib parse quote s "%/ @& +$ ~*' ?#[]"
def get sd auth val sd auth pillar name 'serverdensity' sd pillar pillar get sd auth pillar name log debug ' Server Density Pillar {0 }' format sd pillar if not sd pillar log error ' Couldnotload{ 0 }pillar' format sd auth pillar name raise Command Execution Error '{ 0 }pillarisrequiredforauthentication' format sd auth pillar name try return sd pillar[val]except Key Error log error ' Couldnotfindvalue{ 0 }inpillar' format val raise Command Execution Error '{ 0 }valuewasnotfoundinpillar' format val
def end threads for t in thread Pool t my thread ended Truet join
def sort seq gap len seq swap Truewhile gap > 1 or swap gap max 1 int gap / 1 25 swap Falsefor i in range len seq - gap if seq[i] > seq[ i + gap ] seq[i] seq[ i + gap ] seq[ i + gap ] seq[i] swap Truereturn seq
def remove dups L seen before set [] L2 []for i in L if i not in seen before seen before add i L2 append i return L2
def set computer name name if name and six PY 2 name name decode 'utf- 8 ' if windll kernel 32 Set Computer Name Ex W win 32 con Computer Name Physical Dns Hostname name ret {' Computer Name' {' Current' get computer name }}pending get pending computer name if pending not in None False ret[' Computer Name'][' Pending'] pendingreturn retreturn False
def eval kfold features labels k 10 scan [ 2 ** t for t in range 0 9 1 ] seed 1234 npts len features kf K Fold npts n folds k random state seed scores []for s in scan scanscores []for train test in kf X train features[train]y train labels[train]X test features[test]y test labels[test]clf Logistic Regression C s clf fit X train y train score clf score X test y test scanscores append score print s score scores append np mean scanscores print scoress ind np argmax scores s scan[s ind]print s ind s return s
def ix *args out []nd len args for k new in enumerate args new cupy asarray new if new ndim 1 raise Value Error ' Crossindexmustbe 1 dimensional' if new size 0 new new astype numpy intp if cupy issubdtype new dtype cupy bool new new nonzero new new reshape 1 * k + new size + 1 * nd - k - 1 out append new return tuple out
def filter pathext val return os path splitext val or u'' [1 ]
def virt call domain function section comment **kwargs ret {'name' domain 'changes' {} 'result' True 'comment' ''}targeted domains fnmatch filter salt ['virt list domains'] domain changed domains list ignored domains list for domain in targeted domains try response salt ['virt {0 }' format function ] domain **kwargs if isinstance response dict response response['name']changed domains append {'domain' domain function response} except libvirt libvirt Error as err ignored domains append {'domain' domain 'issue' str err } if not changed domains ret['result'] Falseret['comment'] ' Nochangeshadhappened'if ignored domains ret['changes'] {'ignored' ignored domains}else ret['changes'] {section changed domains}ret['comment'] commentreturn ret
def walk node from collections import dequetodo deque [node] while todo node todo popleft todo extend iter child nodes node yield node
def list snapshots kwargs None call None if call 'function' raise Salt Cloud System Exit ' Thelist snapshotsfunctionmustbecalledwith-for--function ' ret {}vm properties ['name' 'root Snapshot' 'snapshot']vm list salt utils vmware get mors with properties get si vim Virtual Machine vm properties for vm in vm list if vm['root Snapshot'] if kwargs and kwargs get 'name' vm['name'] return {vm['name'] get snapshots vm['snapshot'] root Snapshot List }else ret[vm['name']] get snapshots vm['snapshot'] root Snapshot List elif kwargs and kwargs get 'name' vm['name'] return {}return ret
def virtual cmd detect os if salt utils which cmd return 'apache'return False ' Theapacheexecutionmodulecannotbeloaded apacheisnotinstalled '
def crt 1 m return gf crt 1 m ZZ
def ping server port s socket socket socket AF INET socket SOCK STREAM try s connect server port return Trueexcept socket error return Falsefinally s close
@require contextdef group type get context id inactive False expected fields None return group type get context id session None inactive inactive expected fields expected fields
def init if not directory get plugins Neutron Manager get instance